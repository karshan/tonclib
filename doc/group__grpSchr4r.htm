<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>libtonc: 4bpp tiled surfaces, row major</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">libtonc
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">4bpp tiled surfaces, row major<div class="ingroups"><a class="el" href="group__grpVideo.htm">Video</a> &raquo; <a class="el" href="group__grpSurface.htm">Surface functions</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gadca559503cb658b54e83a864530f2d75"><td class="memItemLeft" align="right" valign="top"><a id="gadca559503cb658b54e83a864530f2d75"></a>
u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#gadca559503cb658b54e83a864530f2d75">schr4r_get_pixel</a> (const TSurface *src, int x, int y)</td></tr>
<tr class="memdesc:gadca559503cb658b54e83a864530f2d75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pixel value of <em>src</em> at (<em>x</em>, <em>y</em>). <br /></td></tr>
<tr class="separator:gadca559503cb658b54e83a864530f2d75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2876b301bf8b8502c4d7b94b1d9e97a5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#ga2876b301bf8b8502c4d7b94b1d9e97a5">schr4r_plot</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:ga2876b301bf8b8502c4d7b94b1d9e97a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plot a single pixel on a 4bpp tiled surface.  <a href="#ga2876b301bf8b8502c4d7b94b1d9e97a5">More...</a><br /></td></tr>
<tr class="separator:ga2876b301bf8b8502c4d7b94b1d9e97a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb2c64c78a4ef63ea26174cf6ababb77"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#gadb2c64c78a4ef63ea26174cf6ababb77">schr4r_hline</a> (const TSurface *dst, int x1, int y, int x2, u32 clr)</td></tr>
<tr class="memdesc:gadb2c64c78a4ef63ea26174cf6ababb77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a horizontal line on a 4bpp tiled surface.  <a href="#gadb2c64c78a4ef63ea26174cf6ababb77">More...</a><br /></td></tr>
<tr class="separator:gadb2c64c78a4ef63ea26174cf6ababb77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga416302d1aac4ea2315249820db1db458"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#ga416302d1aac4ea2315249820db1db458">schr4r_vline</a> (const TSurface *dst, int x, int y1, int y2, u32 clr)</td></tr>
<tr class="memdesc:ga416302d1aac4ea2315249820db1db458"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a vertical line on a 4bpp tiled surface.  <a href="#ga416302d1aac4ea2315249820db1db458">More...</a><br /></td></tr>
<tr class="separator:ga416302d1aac4ea2315249820db1db458"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga47f06b7080f50169681eb1213e50bf1b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#ga47f06b7080f50169681eb1213e50bf1b">schr4r_line</a> (const TSurface *dst, int x1, int y1, int x2, int y2, u32 clr)</td></tr>
<tr class="memdesc:ga47f06b7080f50169681eb1213e50bf1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a line on a 4bpp tiled surface.  <a href="#ga47f06b7080f50169681eb1213e50bf1b">More...</a><br /></td></tr>
<tr class="separator:ga47f06b7080f50169681eb1213e50bf1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3e28aa9b7944b7f872cda8b96cadc49c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#ga3e28aa9b7944b7f872cda8b96cadc49c">schr4r_rect</a> (const TSurface *dst, int left, int top, int right, int bottom, u32 clr)</td></tr>
<tr class="memdesc:ga3e28aa9b7944b7f872cda8b96cadc49c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Render a rectangle on a tiled canvas.  <a href="#ga3e28aa9b7944b7f872cda8b96cadc49c">More...</a><br /></td></tr>
<tr class="separator:ga3e28aa9b7944b7f872cda8b96cadc49c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafedc31ca31a2b5d49ea4715c28cdf5b9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#gafedc31ca31a2b5d49ea4715c28cdf5b9">schr4r_frame</a> (const TSurface *dst, int left, int top, int right, int bottom, u32 clr)</td></tr>
<tr class="memdesc:gafedc31ca31a2b5d49ea4715c28cdf5b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a rectangle on a 4bpp tiled surface.  <a href="#gafedc31ca31a2b5d49ea4715c28cdf5b9">More...</a><br /></td></tr>
<tr class="separator:gafedc31ca31a2b5d49ea4715c28cdf5b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga08d8dca7bcbc41a09a82ea3a0feb385d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#ga08d8dca7bcbc41a09a82ea3a0feb385d">schr4r_prep_map</a> (const TSurface *srf, u16 *map, u16 se0)</td></tr>
<tr class="memdesc:ga08d8dca7bcbc41a09a82ea3a0feb385d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare a screen-entry map for use with chr4.  <a href="#ga08d8dca7bcbc41a09a82ea3a0feb385d">More...</a><br /></td></tr>
<tr class="separator:ga08d8dca7bcbc41a09a82ea3a0feb385d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaeeb8803e471605c75f44384c35e8d77"><td class="memItemLeft" align="right" valign="top"><a id="gaaeeb8803e471605c75f44384c35e8d77"></a>
u32 *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#gaaeeb8803e471605c75f44384c35e8d77">schr4r_get_ptr</a> (const TSurface *srf, int x, int y)</td></tr>
<tr class="memdesc:gaaeeb8803e471605c75f44384c35e8d77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Special pointer getter for chr4: start of in-tile line. <br /></td></tr>
<tr class="separator:gaaeeb8803e471605c75f44384c35e8d77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf6fcfdec0ab7066dab5d698bfbf8e42f"><td class="memItemLeft" align="right" valign="top"><a id="gaf6fcfdec0ab7066dab5d698bfbf8e42f"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#gaf6fcfdec0ab7066dab5d698bfbf8e42f">_schr4r_plot</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:gaf6fcfdec0ab7066dab5d698bfbf8e42f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plot a single pixel on a 4bpp tiled,row-major surface; inline version. <br /></td></tr>
<tr class="separator:gaf6fcfdec0ab7066dab5d698bfbf8e42f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7e9af947ebb4c0691c99732541bb71de"><td class="memItemLeft" align="right" valign="top"><a id="ga7e9af947ebb4c0691c99732541bb71de"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#ga7e9af947ebb4c0691c99732541bb71de">_schr4r_get_pixel</a> (const TSurface *src, int x, int y)</td></tr>
<tr class="memdesc:ga7e9af947ebb4c0691c99732541bb71de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pixel value of <em>src</em> at (<em>x</em>, <em>y</em>); inline version. <br /></td></tr>
<tr class="separator:ga7e9af947ebb4c0691c99732541bb71de"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>A (4bpp) tiled surface is formed when each tilemap entry references a unique tile (this is done by <a class="el" href="group__grpSchr4r.htm#ga08d8dca7bcbc41a09a82ea3a0feb385d" title="Prepare a screen-entry map for use with chr4. ">schr4r_prep_map()</a>). The pixels on the tiles will then uniquely map onto pixels on the screen. </p>
<p>There are two ways of map-layout here: row-major indexing and column-major indexing. The difference if is that tile 1 is to the right of tile 0 in the former, but under it in the latter. </p>
<pre>
30x20t screen:
  Row-major:
     0  1  2  3 ...
    30 31 32 33 ...
    60 61 62 63 ...</pre><pre>  Column-major:
     0 20 40 60 ...
     1 21 41 61 ...
     2 22 41 62 ...
</pre> <p>With 4bpp tiles, the column-major version makes the <em>y</em> coordinate match up nicely with successive words. For this reason, column-major is preferred over row-major. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="gafedc31ca31a2b5d49ea4715c28cdf5b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafedc31ca31a2b5d49ea4715c28cdf5b9">&#9670;&nbsp;</a></span>schr4r_frame()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void schr4r_frame </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>top</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>right</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>bottom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw a rectangle on a 4bpp tiled surface. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">left</td><td>Left side of rectangle; </td></tr>
    <tr><td class="paramname">top</td><td>Top side of rectangle. </td></tr>
    <tr><td class="paramname">right</td><td>Right side of rectangle. </td></tr>
    <tr><td class="paramname">bottom</td><td>Bottom side of rectangle. </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Does normalization, but not bounds checks. </dd>
<dd>
PONDER: RB in- or exclusive? </dd></dl>

</div>
</div>
<a id="gadb2c64c78a4ef63ea26174cf6ababb77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadb2c64c78a4ef63ea26174cf6ababb77">&#9670;&nbsp;</a></span>schr4r_hline()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void schr4r_hline </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw a horizontal line on a 4bpp tiled surface. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">x1</td><td>First X-coord. </td></tr>
    <tr><td class="paramname">y</td><td>Y-coord. </td></tr>
    <tr><td class="paramname">x2</td><td>Second X-coord. </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Does normalization, but not bounds checks. </dd></dl>

</div>
</div>
<a id="ga47f06b7080f50169681eb1213e50bf1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga47f06b7080f50169681eb1213e50bf1b">&#9670;&nbsp;</a></span>schr4r_line()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void schr4r_line </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw a line on a 4bpp tiled surface. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">x1</td><td>First X-coord. </td></tr>
    <tr><td class="paramname">y1</td><td>First Y-coord. </td></tr>
    <tr><td class="paramname">x2</td><td>Second X-coord. </td></tr>
    <tr><td class="paramname">y2</td><td>Second Y-coord. </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Does normalization, but not bounds checks. </dd></dl>

</div>
</div>
<a id="ga2876b301bf8b8502c4d7b94b1d9e97a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2876b301bf8b8502c4d7b94b1d9e97a5">&#9670;&nbsp;</a></span>schr4r_plot()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void schr4r_plot </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Plot a single pixel on a 4bpp tiled surface. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">x</td><td>X-coord. </td></tr>
    <tr><td class="paramname">y</td><td>Y-coord. </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Slow as fuck. Inline plotting functionality if possible. </dd></dl>

</div>
</div>
<a id="ga08d8dca7bcbc41a09a82ea3a0feb385d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga08d8dca7bcbc41a09a82ea3a0feb385d">&#9670;&nbsp;</a></span>schr4r_prep_map()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void schr4r_prep_map </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>srf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16 *&#160;</td>
          <td class="paramname"><em>map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&#160;</td>
          <td class="paramname"><em>se0</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prepare a screen-entry map for use with chr4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">srf</td><td>Surface with size information. </td></tr>
    <tr><td class="paramname">map</td><td>Screen-blocked map to initialize. </td></tr>
    <tr><td class="paramname">se0</td><td>Additive base screen-entry. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga3e28aa9b7944b7f872cda8b96cadc49c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3e28aa9b7944b7f872cda8b96cadc49c">&#9670;&nbsp;</a></span>schr4r_rect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void schr4r_rect </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>top</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>right</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>bottom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Render a rectangle on a tiled canvas. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">left</td><td>Left side of rectangle; </td></tr>
    <tr><td class="paramname">top</td><td>Top side of rectangle. </td></tr>
    <tr><td class="paramname">right</td><td>Right side of rectangle. </td></tr>
    <tr><td class="paramname">bottom</td><td>Bottom side of rectangle. </td></tr>
    <tr><td class="paramname">clr</td><td>Color-index. Octupled if &gt; 16. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>For a routine like this you can strive for programmer sanity or speed. This is for speed. Except for very small rects, this is between 5x and 300x faster than the trivial version. Here's how it works: | c | +&mdash;+ a | d | b +&mdash;+ | e |</dd></dl>
<p>Boundaries are tile-boundaries;</p><ul>
<li>If unaligned left : draw A [left,8), update dstD/width</li>
<li>If unaligned right: draw B [right&amp;~7,right), Adjust dstD/width</li>
<li>If width&gt;0<ul>
<li>if unaligned top : draw C in ix/iy loop. Adjust dstD/height</li>
<li>If height&gt;8 : draw D in memset32 blocks, adjust height</li>
<li>Final sets : draw E in ix/iy loop </li>
</ul>
</li>
</ul>

<p class="reference">Referenced by <a class="el" href="group__grpTTEChr4r.htm#ga69ee7affeffcb32840e42d056bd1514b">chr4r_erase()</a>.</p>

</div>
</div>
<a id="ga416302d1aac4ea2315249820db1db458"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga416302d1aac4ea2315249820db1db458">&#9670;&nbsp;</a></span>schr4r_vline()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void schr4r_vline </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw a vertical line on a 4bpp tiled surface. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">x</td><td>X-coord. </td></tr>
    <tr><td class="paramname">y1</td><td>First Y-coord. </td></tr>
    <tr><td class="paramname">y2</td><td>Second Y-coord. </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Does normalization, but not bounds checks. </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
