<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>libtonc: Input</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">libtonc
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">Input</div>  </div>
</div><!--header-->
<div class="contents">

<p>Routines for synchronous and asynchronous button states.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga57e892c26d9b74d96be86a1dd0f474f4"><td class="memItemLeft" align="right" valign="top"><a id="ga57e892c26d9b74d96be86a1dd0f474f4"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#ga57e892c26d9b74d96be86a1dd0f474f4">KEY_FULL</a>&#160;&#160;&#160;0xFFFFFFFF</td></tr>
<tr class="memdesc:ga57e892c26d9b74d96be86a1dd0f474f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Define for checking all keys. <br /></td></tr>
<tr class="separator:ga57e892c26d9b74d96be86a1dd0f474f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2ba60980b1dd2232b89a89d48a108d89"><td class="memItemLeft" align="right" valign="top"><a id="ga2ba60980b1dd2232b89a89d48a108d89"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>KEY_DOWN_NOW</b>(key)&#160;&#160;&#160;(~(<a class="el" href="group__grpReg.htm#ga8990e2b671d00a382debe1b99833f22d">REG_KEYINPUT</a>) &amp; key)</td></tr>
<tr class="separator:ga2ba60980b1dd2232b89a89d48a108d89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3c3170a228413a534a71c23f83f9d983"><td class="memItemLeft" align="right" valign="top"><a id="ga3c3170a228413a534a71c23f83f9d983"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>KEY_UP_NOW</b>(key)&#160;&#160;&#160;( (<a class="el" href="group__grpReg.htm#ga8990e2b671d00a382debe1b99833f22d">REG_KEYINPUT</a>) &amp; key)</td></tr>
<tr class="separator:ga3c3170a228413a534a71c23f83f9d983"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2993f869b9107377389e1aa4a3206b58"><td class="memItemLeft" align="right" valign="top"><a id="ga2993f869b9107377389e1aa4a3206b58"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>KEY_EQ</b>(key_fun,  keys)&#160;&#160;&#160;( key_fun(keys) == (keys) )</td></tr>
<tr class="separator:ga2993f869b9107377389e1aa4a3206b58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadae19a23709fa080a976213a9fcd2edb"><td class="memItemLeft" align="right" valign="top"><a id="gadae19a23709fa080a976213a9fcd2edb"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>KEY_TRIBOOL</b>(fnKey,  plus,  minus)&#160;&#160;&#160;( <a class="el" href="group__grpCoreBit.htm#ga5cb302a4e8a431b08b8b4a280886ebb3">bit_tribool</a>(fnKey(<a class="el" href="group__grpInput.htm#ga57e892c26d9b74d96be86a1dd0f474f4">KEY_FULL</a>), plus, minus) )</td></tr>
<tr class="separator:gadae19a23709fa080a976213a9fcd2edb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga2973bbea68826eb5fe3744551a44fbd4"><td class="memItemLeft" align="right" valign="top"><a id="ga2973bbea68826eb5fe3744551a44fbd4"></a>
typedef enum eKeyIndex&#160;</td><td class="memItemRight" valign="bottom"><b>eKeyIndex</b></td></tr>
<tr class="separator:ga2973bbea68826eb5fe3744551a44fbd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga0093edca5043c77ca9581408acf288e6"><td class="memItemLeft" align="right" valign="top"><a id="ga0093edca5043c77ca9581408acf288e6"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>eKeyIndex</b> { <br />
&#160;&#160;<b>KI_A</b> =0, 
<b>KI_B</b>, 
<b>KI_SELECT</b>, 
<b>KI_START</b>, 
<br />
&#160;&#160;<b>KI_RIGHT</b>, 
<b>KI_LEFT</b>, 
<b>KI_UP</b>, 
<b>KI_DOWN</b>, 
<br />
&#160;&#160;<b>KI_R</b>, 
<b>KI_L</b>, 
<b>KI_MAX</b>
<br />
 }</td></tr>
<tr class="separator:ga0093edca5043c77ca9581408acf288e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gae317acbeb642404aecfa233dac30e82c"><td class="memItemLeft" align="right" valign="top"><a id="gae317acbeb642404aecfa233dac30e82c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>key_wait_for_clear</b> (u32 key)</td></tr>
<tr class="separator:gae317acbeb642404aecfa233dac30e82c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga945f9e8cc7d946a992ae997a060fa65f"><td class="memItemLeft" align="right" valign="top"><a id="ga945f9e8cc7d946a992ae997a060fa65f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#ga945f9e8cc7d946a992ae997a060fa65f">key_wait_till_hit</a> (u16 key)</td></tr>
<tr class="memdesc:ga945f9e8cc7d946a992ae997a060fa65f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wait until <em>key</em> is hit. <br /></td></tr>
<tr class="separator:ga945f9e8cc7d946a992ae997a060fa65f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ga4bdcd475597c1160fb608ed63013b890"><td class="memItemLeft" align="right" valign="top"><a id="ga4bdcd475597c1160fb608ed63013b890"></a>
u16&#160;</td><td class="memItemRight" valign="bottom"><b>__key_curr</b></td></tr>
<tr class="separator:ga4bdcd475597c1160fb608ed63013b890"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga07f89708211a58592a69353bfb3c4085"><td class="memItemLeft" align="right" valign="top"><a id="ga07f89708211a58592a69353bfb3c4085"></a>
u16&#160;</td><td class="memItemRight" valign="bottom"><b>__key_prev</b></td></tr>
<tr class="separator:ga07f89708211a58592a69353bfb3c4085"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Basic synchonous keystates</h2></td></tr>
<tr class="memitem:ga34c8e08ca4162449fdbe5a76aeefc4f9"><td class="memItemLeft" align="right" valign="top"><a id="ga34c8e08ca4162449fdbe5a76aeefc4f9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#ga34c8e08ca4162449fdbe5a76aeefc4f9">key_poll</a> ()</td></tr>
<tr class="memdesc:ga34c8e08ca4162449fdbe5a76aeefc4f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Poll for keystates and repeated keys. <br /></td></tr>
<tr class="separator:ga34c8e08ca4162449fdbe5a76aeefc4f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga50bb54baba0d3d6b978793781bf4da7d"><td class="memItemLeft" align="right" valign="top"><a id="ga50bb54baba0d3d6b978793781bf4da7d"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#ga50bb54baba0d3d6b978793781bf4da7d">key_curr_state</a> (void)</td></tr>
<tr class="memdesc:ga50bb54baba0d3d6b978793781bf4da7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get current keystate. <br /></td></tr>
<tr class="separator:ga50bb54baba0d3d6b978793781bf4da7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad1f588c823418c93f5dbfc2517c55504"><td class="memItemLeft" align="right" valign="top"><a id="gad1f588c823418c93f5dbfc2517c55504"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#gad1f588c823418c93f5dbfc2517c55504">key_prev_state</a> (void)</td></tr>
<tr class="memdesc:gad1f588c823418c93f5dbfc2517c55504"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get previous key state. <br /></td></tr>
<tr class="separator:gad1f588c823418c93f5dbfc2517c55504"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8b2062de0d3271fc31097aaaa53b645f"><td class="memItemLeft" align="right" valign="top"><a id="ga8b2062de0d3271fc31097aaaa53b645f"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#ga8b2062de0d3271fc31097aaaa53b645f">key_is_down</a> (u32 key)</td></tr>
<tr class="memdesc:ga8b2062de0d3271fc31097aaaa53b645f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives the keys of <em>key</em> that are currently down. <br /></td></tr>
<tr class="separator:ga8b2062de0d3271fc31097aaaa53b645f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2219dd87334c2f3153dd6a8c36bc0d0e"><td class="memItemLeft" align="right" valign="top"><a id="ga2219dd87334c2f3153dd6a8c36bc0d0e"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#ga2219dd87334c2f3153dd6a8c36bc0d0e">key_is_up</a> (u32 key)</td></tr>
<tr class="memdesc:ga2219dd87334c2f3153dd6a8c36bc0d0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives the keys of <em>key</em> that are currently up. <br /></td></tr>
<tr class="separator:ga2219dd87334c2f3153dd6a8c36bc0d0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2dd2fd9d8d036f751d32ebb7491dee2a"><td class="memItemLeft" align="right" valign="top"><a id="ga2dd2fd9d8d036f751d32ebb7491dee2a"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#ga2dd2fd9d8d036f751d32ebb7491dee2a">key_was_down</a> (u32 key)</td></tr>
<tr class="memdesc:ga2dd2fd9d8d036f751d32ebb7491dee2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives the keys of <em>key</em> that were previously down. <br /></td></tr>
<tr class="separator:ga2dd2fd9d8d036f751d32ebb7491dee2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad358946fcf38c56fad170e4729b3644d"><td class="memItemLeft" align="right" valign="top"><a id="gad358946fcf38c56fad170e4729b3644d"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#gad358946fcf38c56fad170e4729b3644d">key_was_up</a> (u32 key)</td></tr>
<tr class="memdesc:gad358946fcf38c56fad170e4729b3644d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives the keys of <em>key</em> that were previously down. <br /></td></tr>
<tr class="separator:gad358946fcf38c56fad170e4729b3644d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Transitional keystates</h2></td></tr>
<tr class="memitem:ga78cb3797b80b04b090dab2066695a30f"><td class="memItemLeft" align="right" valign="top"><a id="ga78cb3797b80b04b090dab2066695a30f"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#ga78cb3797b80b04b090dab2066695a30f">key_transit</a> (u32 key)</td></tr>
<tr class="memdesc:ga78cb3797b80b04b090dab2066695a30f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives the keys of <em>key</em> that are different from before. <br /></td></tr>
<tr class="separator:ga78cb3797b80b04b090dab2066695a30f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc951632bc0b2d17a4964a88f7170a71"><td class="memItemLeft" align="right" valign="top"><a id="gabc951632bc0b2d17a4964a88f7170a71"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#gabc951632bc0b2d17a4964a88f7170a71">key_held</a> (u32 key)</td></tr>
<tr class="memdesc:gabc951632bc0b2d17a4964a88f7170a71"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives the keys of <em>key</em> that are being held down. <br /></td></tr>
<tr class="separator:gabc951632bc0b2d17a4964a88f7170a71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaea1ba6f6a6a3159b33b29c68b1258ec1"><td class="memItemLeft" align="right" valign="top"><a id="gaea1ba6f6a6a3159b33b29c68b1258ec1"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#gaea1ba6f6a6a3159b33b29c68b1258ec1">key_hit</a> (u32 key)</td></tr>
<tr class="memdesc:gaea1ba6f6a6a3159b33b29c68b1258ec1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives the keys of <em>key</em> that are pressed (down now but not before) <br /></td></tr>
<tr class="separator:gaea1ba6f6a6a3159b33b29c68b1258ec1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga54844a9a5ac545b6d02da398b785228b"><td class="memItemLeft" align="right" valign="top"><a id="ga54844a9a5ac545b6d02da398b785228b"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#ga54844a9a5ac545b6d02da398b785228b">key_released</a> (u32 key)</td></tr>
<tr class="memdesc:ga54844a9a5ac545b6d02da398b785228b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives the keys of <em>key</em> that are being released. <br /></td></tr>
<tr class="separator:ga54844a9a5ac545b6d02da398b785228b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Tribools</h2></td></tr>
<tr class="memitem:ga211041ef4b51b5ddd25da688bf5e0973"><td class="memItemLeft" align="right" valign="top"><a id="ga211041ef4b51b5ddd25da688bf5e0973"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#ga211041ef4b51b5ddd25da688bf5e0973">key_tri_horz</a> (void)</td></tr>
<tr class="memdesc:ga211041ef4b51b5ddd25da688bf5e0973"><td class="mdescLeft">&#160;</td><td class="mdescRight">Horizontal tribool (right,left)=(+,-) <br /></td></tr>
<tr class="separator:ga211041ef4b51b5ddd25da688bf5e0973"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5b7c4434a603b8e9dffe97d1d016e600"><td class="memItemLeft" align="right" valign="top"><a id="ga5b7c4434a603b8e9dffe97d1d016e600"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#ga5b7c4434a603b8e9dffe97d1d016e600">key_tri_vert</a> (void)</td></tr>
<tr class="memdesc:ga5b7c4434a603b8e9dffe97d1d016e600"><td class="mdescLeft">&#160;</td><td class="mdescRight">Vertical tribool (down,up)=(+,-) <br /></td></tr>
<tr class="separator:ga5b7c4434a603b8e9dffe97d1d016e600"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b1e6aa939108af1d48e09b5ef014e53"><td class="memItemLeft" align="right" valign="top"><a id="ga3b1e6aa939108af1d48e09b5ef014e53"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#ga3b1e6aa939108af1d48e09b5ef014e53">key_tri_shoulder</a> (void)</td></tr>
<tr class="memdesc:ga3b1e6aa939108af1d48e09b5ef014e53"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shoulder-button tribool (R,L)=(+,-) <br /></td></tr>
<tr class="separator:ga3b1e6aa939108af1d48e09b5ef014e53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6ceca0b0d0f0f2c7053e9b9ba4e4b350"><td class="memItemLeft" align="right" valign="top"><a id="ga6ceca0b0d0f0f2c7053e9b9ba4e4b350"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#ga6ceca0b0d0f0f2c7053e9b9ba4e4b350">key_tri_fire</a> (void)</td></tr>
<tr class="memdesc:ga6ceca0b0d0f0f2c7053e9b9ba4e4b350"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fire-button tribool (A,B)=(+,-) <br /></td></tr>
<tr class="separator:ga6ceca0b0d0f0f2c7053e9b9ba4e4b350"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Key repeats</h2></td></tr>
<tr class="memitem:ga05af26de91695e70e2530eab03494d0e"><td class="memItemLeft" align="right" valign="top"><a id="ga05af26de91695e70e2530eab03494d0e"></a>
u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#ga05af26de91695e70e2530eab03494d0e">key_repeat</a> (u32 keys)</td></tr>
<tr class="memdesc:ga05af26de91695e70e2530eab03494d0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get status of repeated keys. <br /></td></tr>
<tr class="separator:ga05af26de91695e70e2530eab03494d0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga972c4c5dc1c26eff53846279125e942d"><td class="memItemLeft" align="right" valign="top"><a id="ga972c4c5dc1c26eff53846279125e942d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#ga972c4c5dc1c26eff53846279125e942d">key_repeat_mask</a> (u32 mask)</td></tr>
<tr class="memdesc:ga972c4c5dc1c26eff53846279125e942d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set repeat mask. Only these keys will be considered for repeats. <br /></td></tr>
<tr class="separator:ga972c4c5dc1c26eff53846279125e942d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga23d70fb83f53fb384d9e5023fd4a7951"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpInput.htm#ga23d70fb83f53fb384d9e5023fd4a7951">key_repeat_limits</a> (uint delay, uint repeat)</td></tr>
<tr class="memdesc:ga23d70fb83f53fb384d9e5023fd4a7951"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the delay and repeat limits for repeated keys.  <a href="#ga23d70fb83f53fb384d9e5023fd4a7951">More...</a><br /></td></tr>
<tr class="separator:ga23d70fb83f53fb384d9e5023fd4a7951"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Routines for synchronous and asynchronous button states. </p>
<p>For details, see <a href="http://www.coranac.com/tonc/text/keys.htm">tonc:keys</a>. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga23d70fb83f53fb384d9e5023fd4a7951"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga23d70fb83f53fb384d9e5023fd4a7951">&#9670;&nbsp;</a></span>key_repeat_limits()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void key_repeat_limits </td>
          <td>(</td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>delay</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>repeat</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the delay and repeat limits for repeated keys. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">delay</td><td>Set first repeat limit. If 0, repeats are off. </td></tr>
    <tr><td class="paramname">repeat</td><td>Sets later repeat limit. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Both limits have a range of [0, 255]. If either argument is &lt;0, the old value will be kept. </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
