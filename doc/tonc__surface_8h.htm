<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>libtonc: tonc_surface.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">libtonc
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.htm">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">tonc_surface.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="tonc__memmap_8h.htm">tonc_memmap.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tonc__core_8h.htm">tonc_core.h</a>&quot;</code><br />
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga90dc42181b432962e19973610ef36883"><td class="memItemLeft" align="right" valign="top">
typedef enum <a class="el" href="group__grpSurface.htm#ga648b4661eb1ae22c943458db7b02d612">ESurfaceType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#ga90dc42181b432962e19973610ef36883">ESurfaceType</a></td></tr>
<tr class="memdesc:ga90dc42181b432962e19973610ef36883"><td class="mdescLeft">&#160;</td><td class="mdescRight">Surface types. <br /></td></tr>
<tr class="separator:ga90dc42181b432962e19973610ef36883"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3a85e20c7eed0485c940d682d4ad287d"><td class="memItemLeft" align="right" valign="top">
typedef struct TSurface&#160;</td><td class="memItemRight" valign="bottom"><b>TSurface</b></td></tr>
<tr class="separator:ga3a85e20c7eed0485c940d682d4ad287d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Rendering procedure types</div></td></tr>
<tr class="memitem:a44993525c7ffbfb78bfc112461e3d203"><td class="memItemLeft" align="right" valign="top"><a id="a44993525c7ffbfb78bfc112461e3d203"></a>
typedef u32(*&#160;</td><td class="memItemRight" valign="bottom"><b>fnGetPixel</b>) (const TSurface *src, int x, int y)</td></tr>
<tr class="separator:a44993525c7ffbfb78bfc112461e3d203"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6102998e23bd8dd19d7eb78fffd64b35"><td class="memItemLeft" align="right" valign="top"><a id="a6102998e23bd8dd19d7eb78fffd64b35"></a>
typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><b>fnPlot</b>) (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="separator:a6102998e23bd8dd19d7eb78fffd64b35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1159765e9de81efe686bea3b8096b887"><td class="memItemLeft" align="right" valign="top"><a id="a1159765e9de81efe686bea3b8096b887"></a>
typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><b>fnHLine</b>) (const TSurface *dst, int x1, int y, int x2, u32 clr)</td></tr>
<tr class="separator:a1159765e9de81efe686bea3b8096b887"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a832a5e75d13fa27e3551d704629eb4a6"><td class="memItemLeft" align="right" valign="top"><a id="a832a5e75d13fa27e3551d704629eb4a6"></a>
typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><b>fnVLine</b>) (const TSurface *dst, int x, int y1, int y2, u32 clr)</td></tr>
<tr class="separator:a832a5e75d13fa27e3551d704629eb4a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a862e6dbd6cc20a7643035caaec28d5bb"><td class="memItemLeft" align="right" valign="top"><a id="a862e6dbd6cc20a7643035caaec28d5bb"></a>
typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><b>fnLine</b>) (const TSurface *dst, int x1, int y1, int x2, int y2, u32 clr)</td></tr>
<tr class="separator:a862e6dbd6cc20a7643035caaec28d5bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8a3ec407f8cbb94f18b35956ebdad47"><td class="memItemLeft" align="right" valign="top"><a id="ab8a3ec407f8cbb94f18b35956ebdad47"></a>
typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><b>fnRect</b>) (const TSurface *dst, int left, int top, int right, int bottom, u32 clr)</td></tr>
<tr class="separator:ab8a3ec407f8cbb94f18b35956ebdad47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a329881af0b9f95c518a361c3657aa424"><td class="memItemLeft" align="right" valign="top"><a id="a329881af0b9f95c518a361c3657aa424"></a>
typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><b>fnFrame</b>) (const TSurface *dst, int left, int top, int right, int bottom, u32 clr)</td></tr>
<tr class="separator:a329881af0b9f95c518a361c3657aa424"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef3a65d0a56c33f1551c76b79c8a4786"><td class="memItemLeft" align="right" valign="top"><a id="aef3a65d0a56c33f1551c76b79c8a4786"></a>
typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><b>fnBlit</b>) (const TSurface *dst, int dstX, int dstY, uint width, uint height, const TSurface *src, int srcX, int srcY)</td></tr>
<tr class="separator:aef3a65d0a56c33f1551c76b79c8a4786"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35fe9e5a5e99d5b4f3b19b33df91fdb4"><td class="memItemLeft" align="right" valign="top"><a id="a35fe9e5a5e99d5b4f3b19b33df91fdb4"></a>
typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><b>fnFlood</b>) (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="separator:a35fe9e5a5e99d5b4f3b19b33df91fdb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00b24cfebb0e5d287d48b0e856ef5d73"><td class="memItemLeft" align="right" valign="top"><a id="a00b24cfebb0e5d287d48b0e856ef5d73"></a>
typedef struct TSurfaceProcTab&#160;</td><td class="memItemRight" valign="bottom"><b>TSurfaceProcTab</b></td></tr>
<tr class="separator:a00b24cfebb0e5d287d48b0e856ef5d73"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga648b4661eb1ae22c943458db7b02d612"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#ga648b4661eb1ae22c943458db7b02d612">ESurfaceType</a> { <br />
&#160;&#160;<a class="el" href="group__grpSurface.htm#gga648b4661eb1ae22c943458db7b02d612a9cfea2dfceebe372f6d23195679e1cc5">SRF_NONE</a> =0, 
<a class="el" href="group__grpSurface.htm#gga648b4661eb1ae22c943458db7b02d612ac00ef437c87c2167b275a32768348521">SRF_BMP16</a> =1, 
<a class="el" href="group__grpSurface.htm#gga648b4661eb1ae22c943458db7b02d612a6b2e22bb3f91e54e24bd31f7a8a50228">SRF_BMP8</a> =2, 
<a class="el" href="group__grpSurface.htm#gga648b4661eb1ae22c943458db7b02d612a7f2c2b1ce67b72e20f6ea35b713efdeb">SRF_CHR4R</a> =4, 
<br />
&#160;&#160;<a class="el" href="group__grpSurface.htm#gga648b4661eb1ae22c943458db7b02d612a90a348dc887ca488cc0aa18636453264">SRF_CHR4C</a> =5, 
<a class="el" href="group__grpSurface.htm#gga648b4661eb1ae22c943458db7b02d612a4bcdaca2be2f8ac6e0a0d46dba406418">SRF_CHR8</a> =6, 
<a class="el" href="group__grpSurface.htm#gga648b4661eb1ae22c943458db7b02d612a73730c997fbaa327d3dd53a4c96c394d">SRF_ALLOCATED</a> = 0x80
<br />
 }<tr class="memdesc:ga648b4661eb1ae22c943458db7b02d612"><td class="mdescLeft">&#160;</td><td class="mdescRight">Surface types.  <a href="group__grpSurface.htm#ga648b4661eb1ae22c943458db7b02d612">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:ga648b4661eb1ae22c943458db7b02d612"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga775c5181aba0087cb2c0133ea8d3885c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#ga775c5181aba0087cb2c0133ea8d3885c">srf_init</a> (TSurface *srf, enum <a class="el" href="group__grpSurface.htm#ga648b4661eb1ae22c943458db7b02d612">ESurfaceType</a> type, const void *data, uint width, uint height, uint bpp, u16 *pal)</td></tr>
<tr class="memdesc:ga775c5181aba0087cb2c0133ea8d3885c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initalize a surface for <em>type</em> formatted graphics.  <a href="group__grpSurface.htm#ga775c5181aba0087cb2c0133ea8d3885c">More...</a><br /></td></tr>
<tr class="separator:ga775c5181aba0087cb2c0133ea8d3885c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga205bd8b3723b66b0e2d685170647581f"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#ga205bd8b3723b66b0e2d685170647581f">srf_pal_copy</a> (const TSurface *dst, const TSurface *src, uint count)</td></tr>
<tr class="memdesc:ga205bd8b3723b66b0e2d685170647581f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy <em>count</em> colors from <em>src's</em> palette to <em>dst's</em> palette. <br /></td></tr>
<tr class="separator:ga205bd8b3723b66b0e2d685170647581f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8d01b2f0135320e7b13847bbfd36c2c2"><td class="memItemLeft" align="right" valign="top">
void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#ga8d01b2f0135320e7b13847bbfd36c2c2">srf_get_ptr</a> (const TSurface *srf, uint x, uint y)</td></tr>
<tr class="memdesc:ga8d01b2f0135320e7b13847bbfd36c2c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the byte address of coordinates (<em>x</em>, <em>y</em>) on the surface. <br /></td></tr>
<tr class="separator:ga8d01b2f0135320e7b13847bbfd36c2c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9be7f9468dbdbfe2fbfae56363b1e4c4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> uint&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#ga9be7f9468dbdbfe2fbfae56363b1e4c4">srf_align</a> (uint width, uint bpp)</td></tr>
<tr class="memdesc:ga9be7f9468dbdbfe2fbfae56363b1e4c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the word-aligned number of bytes for a scanline.  <a href="group__grpSurface.htm#ga9be7f9468dbdbfe2fbfae56363b1e4c4">More...</a><br /></td></tr>
<tr class="separator:ga9be7f9468dbdbfe2fbfae56363b1e4c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga15e841431780f7d4c0734a295cc829bf"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#ga15e841431780f7d4c0734a295cc829bf">srf_set_ptr</a> (TSurface *srf, const void *ptr)</td></tr>
<tr class="memdesc:ga15e841431780f7d4c0734a295cc829bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set Data-pointer surface for <em>srf</em>. <br /></td></tr>
<tr class="separator:ga15e841431780f7d4c0734a295cc829bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa69f8dde433ca79b2df78df758934888"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#gaa69f8dde433ca79b2df78df758934888">srf_set_pal</a> (TSurface *srf, const u16 *pal, uint size)</td></tr>
<tr class="memdesc:gaa69f8dde433ca79b2df78df758934888"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the palette pointer and its size. <br /></td></tr>
<tr class="separator:gaa69f8dde433ca79b2df78df758934888"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7516c4c9589261da8ab65cdfef5b5999"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#ga7516c4c9589261da8ab65cdfef5b5999">_srf_get_ptr</a> (const TSurface *srf, uint x, uint y, uint stride)</td></tr>
<tr class="memdesc:ga7516c4c9589261da8ab65cdfef5b5999"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inline and semi-safe version of <a class="el" href="group__grpSurface.htm#ga8d01b2f0135320e7b13847bbfd36c2c2" title="Get the byte address of coordinates (x, y) on the surface. ">srf_get_ptr()</a>. Use with caution. <br /></td></tr>
<tr class="separator:ga7516c4c9589261da8ab65cdfef5b5999"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa31208246ace11174dcb8e1e9725ebdd"><td class="memItemLeft" align="right" valign="top">
u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#gaa31208246ace11174dcb8e1e9725ebdd">sbmp16_get_pixel</a> (const TSurface *src, int x, int y)</td></tr>
<tr class="memdesc:gaa31208246ace11174dcb8e1e9725ebdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pixel value of <em>src</em> at (<em>x</em>, <em>y</em>). <br /></td></tr>
<tr class="separator:gaa31208246ace11174dcb8e1e9725ebdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d5ac5aa75d7ec6f450f37e5a82ca9ad"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#ga1d5ac5aa75d7ec6f450f37e5a82ca9ad">sbmp16_plot</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:ga1d5ac5aa75d7ec6f450f37e5a82ca9ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plot a single pixel on a 16-bit buffer.  <a href="group__grpSbmp16.htm#ga1d5ac5aa75d7ec6f450f37e5a82ca9ad">More...</a><br /></td></tr>
<tr class="separator:ga1d5ac5aa75d7ec6f450f37e5a82ca9ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6615a3be2aa2f01dacb5363a85378481"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#ga6615a3be2aa2f01dacb5363a85378481">sbmp16_hline</a> (const TSurface *dst, int x1, int y, int x2, u32 clr)</td></tr>
<tr class="memdesc:ga6615a3be2aa2f01dacb5363a85378481"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a horizontal line on an 16bit buffer.  <a href="group__grpSbmp16.htm#ga6615a3be2aa2f01dacb5363a85378481">More...</a><br /></td></tr>
<tr class="separator:ga6615a3be2aa2f01dacb5363a85378481"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac9c6757dea30bbef2a4c7a34a40c05a3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#gac9c6757dea30bbef2a4c7a34a40c05a3">sbmp16_vline</a> (const TSurface *dst, int x, int y1, int y2, u32 clr)</td></tr>
<tr class="memdesc:gac9c6757dea30bbef2a4c7a34a40c05a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a vertical line on an 16bit buffer.  <a href="group__grpSbmp16.htm#gac9c6757dea30bbef2a4c7a34a40c05a3">More...</a><br /></td></tr>
<tr class="separator:gac9c6757dea30bbef2a4c7a34a40c05a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac042144a2ac5450da721f6f6471b4bd2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#gac042144a2ac5450da721f6f6471b4bd2">sbmp16_line</a> (const TSurface *dst, int x1, int y1, int x2, int y2, u32 clr)</td></tr>
<tr class="memdesc:gac042144a2ac5450da721f6f6471b4bd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a line on an 16bit buffer.  <a href="group__grpSbmp16.htm#gac042144a2ac5450da721f6f6471b4bd2">More...</a><br /></td></tr>
<tr class="separator:gac042144a2ac5450da721f6f6471b4bd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga45b7f47d1285456204ad312bb927edeb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#ga45b7f47d1285456204ad312bb927edeb">sbmp16_rect</a> (const TSurface *dst, int left, int top, int right, int bottom, u32 clr)</td></tr>
<tr class="memdesc:ga45b7f47d1285456204ad312bb927edeb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a rectangle in 16bit mode.  <a href="group__grpSbmp16.htm#ga45b7f47d1285456204ad312bb927edeb">More...</a><br /></td></tr>
<tr class="separator:ga45b7f47d1285456204ad312bb927edeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga56c912cf1361310ea1ad5b8a0a7c1e1e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#ga56c912cf1361310ea1ad5b8a0a7c1e1e">sbmp16_frame</a> (const TSurface *dst, int left, int top, int right, int bottom, u32 clr)</td></tr>
<tr class="memdesc:ga56c912cf1361310ea1ad5b8a0a7c1e1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a rectangle in 16bit mode.  <a href="group__grpSbmp16.htm#ga56c912cf1361310ea1ad5b8a0a7c1e1e">More...</a><br /></td></tr>
<tr class="separator:ga56c912cf1361310ea1ad5b8a0a7c1e1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad4675df5bcfffe0c8f173864a7cb2079"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#gad4675df5bcfffe0c8f173864a7cb2079">sbmp16_blit</a> (const TSurface *dst, int dstX, int dstY, uint width, uint height, const TSurface *src, int srcX, int srcY)</td></tr>
<tr class="memdesc:gad4675df5bcfffe0c8f173864a7cb2079"><td class="mdescLeft">&#160;</td><td class="mdescRight">16bpp blitter. Copies a rectangle from one surface to another.  <a href="group__grpSbmp16.htm#gad4675df5bcfffe0c8f173864a7cb2079">More...</a><br /></td></tr>
<tr class="separator:gad4675df5bcfffe0c8f173864a7cb2079"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacf5097d75a0166f9ead03eebb5475c03"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#gacf5097d75a0166f9ead03eebb5475c03">sbmp16_floodfill</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:gacf5097d75a0166f9ead03eebb5475c03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floodfill an area of the same color with new color <em>clr</em>.  <a href="group__grpSbmp16.htm#gacf5097d75a0166f9ead03eebb5475c03">More...</a><br /></td></tr>
<tr class="separator:gacf5097d75a0166f9ead03eebb5475c03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4f7267288657e9ba6a2add9aabb0136f"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#ga4f7267288657e9ba6a2add9aabb0136f">_sbmp16_plot</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:ga4f7267288657e9ba6a2add9aabb0136f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plot a single pixel on a 16-bit buffer; inline version. <br /></td></tr>
<tr class="separator:ga4f7267288657e9ba6a2add9aabb0136f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafe13538316fde16e827d7e74fea92bbc"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#gafe13538316fde16e827d7e74fea92bbc">_sbmp16_get_pixel</a> (const TSurface *src, int x, int y)</td></tr>
<tr class="memdesc:gafe13538316fde16e827d7e74fea92bbc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pixel value of <em>src</em> at (<em>x</em>, <em>y</em>); inline version. <br /></td></tr>
<tr class="separator:gafe13538316fde16e827d7e74fea92bbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7e2eb397e79cc7de9a8a20f40e48a9e3"><td class="memItemLeft" align="right" valign="top">
u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#ga7e2eb397e79cc7de9a8a20f40e48a9e3">sbmp8_get_pixel</a> (const TSurface *src, int x, int y)</td></tr>
<tr class="memdesc:ga7e2eb397e79cc7de9a8a20f40e48a9e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pixel value of <em>src</em> at (<em>x</em>, <em>y</em>). <br /></td></tr>
<tr class="separator:ga7e2eb397e79cc7de9a8a20f40e48a9e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf11c57ccae4f6a4a8650022692201669"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#gaf11c57ccae4f6a4a8650022692201669">sbmp8_plot</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:gaf11c57ccae4f6a4a8650022692201669"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plot a single pixel on a 8-bit buffer.  <a href="group__grpSbmp8.htm#gaf11c57ccae4f6a4a8650022692201669">More...</a><br /></td></tr>
<tr class="separator:gaf11c57ccae4f6a4a8650022692201669"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad925a9c671471a067b8c3d2d6980f24f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#gad925a9c671471a067b8c3d2d6980f24f">sbmp8_hline</a> (const TSurface *dst, int x1, int y, int x2, u32 clr)</td></tr>
<tr class="memdesc:gad925a9c671471a067b8c3d2d6980f24f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a horizontal line on an 8-bit buffer.  <a href="group__grpSbmp8.htm#gad925a9c671471a067b8c3d2d6980f24f">More...</a><br /></td></tr>
<tr class="separator:gad925a9c671471a067b8c3d2d6980f24f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9fd7423775f60058ef567c822c760cd2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#ga9fd7423775f60058ef567c822c760cd2">sbmp8_vline</a> (const TSurface *dst, int x, int y1, int y2, u32 clr)</td></tr>
<tr class="memdesc:ga9fd7423775f60058ef567c822c760cd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a vertical line on an 8-bit buffer.  <a href="group__grpSbmp8.htm#ga9fd7423775f60058ef567c822c760cd2">More...</a><br /></td></tr>
<tr class="separator:ga9fd7423775f60058ef567c822c760cd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeac238b4fd79ad2daabdc98c818f62f7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#gaeac238b4fd79ad2daabdc98c818f62f7">sbmp8_line</a> (const TSurface *dst, int x1, int y1, int x2, int y2, u32 clr)</td></tr>
<tr class="memdesc:gaeac238b4fd79ad2daabdc98c818f62f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a line on an 8-bit buffer.  <a href="group__grpSbmp8.htm#gaeac238b4fd79ad2daabdc98c818f62f7">More...</a><br /></td></tr>
<tr class="separator:gaeac238b4fd79ad2daabdc98c818f62f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d3859acc074497a2a5f68f33c91093d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#ga1d3859acc074497a2a5f68f33c91093d">sbmp8_rect</a> (const TSurface *dst, int left, int top, int right, int bottom, u32 clr)</td></tr>
<tr class="memdesc:ga1d3859acc074497a2a5f68f33c91093d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a rectangle in 8-bit mode.  <a href="group__grpSbmp8.htm#ga1d3859acc074497a2a5f68f33c91093d">More...</a><br /></td></tr>
<tr class="separator:ga1d3859acc074497a2a5f68f33c91093d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1aa3f2e4aaffaf79011f9ee7b20452a7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#ga1aa3f2e4aaffaf79011f9ee7b20452a7">sbmp8_frame</a> (const TSurface *dst, int left, int top, int right, int bottom, u32 clr)</td></tr>
<tr class="memdesc:ga1aa3f2e4aaffaf79011f9ee7b20452a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a rectangle in 8-bit mode.  <a href="group__grpSbmp8.htm#ga1aa3f2e4aaffaf79011f9ee7b20452a7">More...</a><br /></td></tr>
<tr class="separator:ga1aa3f2e4aaffaf79011f9ee7b20452a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0af7716e3a985af84def73d5ce70726b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#ga0af7716e3a985af84def73d5ce70726b">sbmp8_blit</a> (const TSurface *dst, int dstX, int dstY, uint width, uint height, const TSurface *src, int srcX, int srcY)</td></tr>
<tr class="memdesc:ga0af7716e3a985af84def73d5ce70726b"><td class="mdescLeft">&#160;</td><td class="mdescRight">16bpp blitter. Copies a rectangle from one surface to another.  <a href="group__grpSbmp8.htm#ga0af7716e3a985af84def73d5ce70726b">More...</a><br /></td></tr>
<tr class="separator:ga0af7716e3a985af84def73d5ce70726b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4284de8744e5a6114733140f2123c241"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#ga4284de8744e5a6114733140f2123c241">sbmp8_floodfill</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:ga4284de8744e5a6114733140f2123c241"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floodfill an area of the same color with new color <em>clr</em>.  <a href="group__grpSbmp8.htm#ga4284de8744e5a6114733140f2123c241">More...</a><br /></td></tr>
<tr class="separator:ga4284de8744e5a6114733140f2123c241"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa962987eb1416b258982ffb3ba9549df"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#gaa962987eb1416b258982ffb3ba9549df">_sbmp8_plot</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:gaa962987eb1416b258982ffb3ba9549df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plot a single pixel on a 8-bit surface; inline version. <br /></td></tr>
<tr class="separator:gaa962987eb1416b258982ffb3ba9549df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0a6ffbd95edec61dd6f5d791d4bd4fde"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#ga0a6ffbd95edec61dd6f5d791d4bd4fde">_sbmp8_get_pixel</a> (const TSurface *src, int x, int y)</td></tr>
<tr class="memdesc:ga0a6ffbd95edec61dd6f5d791d4bd4fde"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pixel value of <em>src</em> at (<em>x</em>, <em>y</em>); inline version. <br /></td></tr>
<tr class="separator:ga0a6ffbd95edec61dd6f5d791d4bd4fde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga07f63e16ca49e0a64d3c2e8d16f9610a"><td class="memItemLeft" align="right" valign="top">
u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4c.htm#ga07f63e16ca49e0a64d3c2e8d16f9610a">schr4c_get_pixel</a> (const TSurface *src, int x, int y)</td></tr>
<tr class="memdesc:ga07f63e16ca49e0a64d3c2e8d16f9610a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pixel value of <em>src</em> at (<em>x</em>, <em>y</em>). <br /></td></tr>
<tr class="separator:ga07f63e16ca49e0a64d3c2e8d16f9610a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4af2308a12472f5bfbf023d6e39aae66"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4c.htm#ga4af2308a12472f5bfbf023d6e39aae66">schr4c_plot</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:ga4af2308a12472f5bfbf023d6e39aae66"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plot a single pixel on a 4bpp tiled surface.  <a href="group__grpSchr4c.htm#ga4af2308a12472f5bfbf023d6e39aae66">More...</a><br /></td></tr>
<tr class="separator:ga4af2308a12472f5bfbf023d6e39aae66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0a512278650c178f068909632dec06ed"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4c.htm#ga0a512278650c178f068909632dec06ed">schr4c_hline</a> (const TSurface *dst, int x1, int y, int x2, u32 clr)</td></tr>
<tr class="memdesc:ga0a512278650c178f068909632dec06ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a horizontal line on a 4bpp tiled surface.  <a href="group__grpSchr4c.htm#ga0a512278650c178f068909632dec06ed">More...</a><br /></td></tr>
<tr class="separator:ga0a512278650c178f068909632dec06ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaef521b16f409559339a1fb158a9d214b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4c.htm#gaef521b16f409559339a1fb158a9d214b">schr4c_vline</a> (const TSurface *dst, int x, int y1, int y2, u32 clr)</td></tr>
<tr class="memdesc:gaef521b16f409559339a1fb158a9d214b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a vertical line on a 4bpp tiled surface.  <a href="group__grpSchr4c.htm#gaef521b16f409559339a1fb158a9d214b">More...</a><br /></td></tr>
<tr class="separator:gaef521b16f409559339a1fb158a9d214b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga58da3179554b75aba28be9f109bc3af6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4c.htm#ga58da3179554b75aba28be9f109bc3af6">schr4c_line</a> (const TSurface *dst, int x1, int y1, int x2, int y2, u32 clr)</td></tr>
<tr class="memdesc:ga58da3179554b75aba28be9f109bc3af6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a line on a 4bpp tiled surface.  <a href="group__grpSchr4c.htm#ga58da3179554b75aba28be9f109bc3af6">More...</a><br /></td></tr>
<tr class="separator:ga58da3179554b75aba28be9f109bc3af6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf306fcacf4a5d121039448d756a0c8de"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4c.htm#gaf306fcacf4a5d121039448d756a0c8de">schr4c_rect</a> (const TSurface *dst, int left, int top, int right, int bottom, u32 clr)</td></tr>
<tr class="memdesc:gaf306fcacf4a5d121039448d756a0c8de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Render a rectangle on a 4bpp tiled canvas.  <a href="group__grpSchr4c.htm#gaf306fcacf4a5d121039448d756a0c8de">More...</a><br /></td></tr>
<tr class="separator:gaf306fcacf4a5d121039448d756a0c8de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga60d96a4e3e0fb0855c864284be3655b7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4c.htm#ga60d96a4e3e0fb0855c864284be3655b7">schr4c_frame</a> (const TSurface *dst, int left, int top, int right, int bottom, u32 clr)</td></tr>
<tr class="memdesc:ga60d96a4e3e0fb0855c864284be3655b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a rectangle on a 4bpp tiled surface.  <a href="group__grpSchr4c.htm#ga60d96a4e3e0fb0855c864284be3655b7">More...</a><br /></td></tr>
<tr class="separator:ga60d96a4e3e0fb0855c864284be3655b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga24d877050a9522ec408cd8f8906b9c5b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4c.htm#ga24d877050a9522ec408cd8f8906b9c5b">schr4c_blit</a> (const TSurface *dst, int dstX, int dstY, uint width, uint height, const TSurface *src, int srcX, int srcY)</td></tr>
<tr class="memdesc:ga24d877050a9522ec408cd8f8906b9c5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Blitter for 4bpp tiled surfaces. Copies a rectangle from one surface to another.  <a href="group__grpSchr4c.htm#ga24d877050a9522ec408cd8f8906b9c5b">More...</a><br /></td></tr>
<tr class="separator:ga24d877050a9522ec408cd8f8906b9c5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa33f0b3d21aafea635ba97fc57b4d8c7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4c.htm#gaa33f0b3d21aafea635ba97fc57b4d8c7">schr4c_floodfill</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:gaa33f0b3d21aafea635ba97fc57b4d8c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floodfill an area of the same color with new color <em>clr</em>.  <a href="group__grpSchr4c.htm#gaa33f0b3d21aafea635ba97fc57b4d8c7">More...</a><br /></td></tr>
<tr class="separator:gaa33f0b3d21aafea635ba97fc57b4d8c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaad003494407bae5a96c364e46355fac9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4c.htm#gaad003494407bae5a96c364e46355fac9">schr4c_prep_map</a> (const TSurface *srf, u16 *map, u16 se0)</td></tr>
<tr class="memdesc:gaad003494407bae5a96c364e46355fac9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare a screen-entry map for use with chr4.  <a href="group__grpSchr4c.htm#gaad003494407bae5a96c364e46355fac9">More...</a><br /></td></tr>
<tr class="separator:gaad003494407bae5a96c364e46355fac9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9c8094dcfb0a8addcb05ecb0064b44af"><td class="memItemLeft" align="right" valign="top">
u32 *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4c.htm#ga9c8094dcfb0a8addcb05ecb0064b44af">schr4c_get_ptr</a> (const TSurface *srf, int x, int y)</td></tr>
<tr class="memdesc:ga9c8094dcfb0a8addcb05ecb0064b44af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Special pointer getter for chr4: start of in-tile line. <br /></td></tr>
<tr class="separator:ga9c8094dcfb0a8addcb05ecb0064b44af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaab13ca497179bb85f145da1ebe2d366f"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4c.htm#gaab13ca497179bb85f145da1ebe2d366f">_schr4c_plot</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:gaab13ca497179bb85f145da1ebe2d366f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plot a single pixel on a 4bpp tiled,col-jamor surface; inline version. <br /></td></tr>
<tr class="separator:gaab13ca497179bb85f145da1ebe2d366f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafcadb54fe40422f4c64fac52e484e913"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4c.htm#gafcadb54fe40422f4c64fac52e484e913">_schr4c_get_pixel</a> (const TSurface *src, int x, int y)</td></tr>
<tr class="memdesc:gafcadb54fe40422f4c64fac52e484e913"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pixel value of <em>src</em> at (<em>x</em>, <em>y</em>); inline version. <br /></td></tr>
<tr class="separator:gafcadb54fe40422f4c64fac52e484e913"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadca559503cb658b54e83a864530f2d75"><td class="memItemLeft" align="right" valign="top">
u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#gadca559503cb658b54e83a864530f2d75">schr4r_get_pixel</a> (const TSurface *src, int x, int y)</td></tr>
<tr class="memdesc:gadca559503cb658b54e83a864530f2d75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pixel value of <em>src</em> at (<em>x</em>, <em>y</em>). <br /></td></tr>
<tr class="separator:gadca559503cb658b54e83a864530f2d75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2876b301bf8b8502c4d7b94b1d9e97a5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#ga2876b301bf8b8502c4d7b94b1d9e97a5">schr4r_plot</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:ga2876b301bf8b8502c4d7b94b1d9e97a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plot a single pixel on a 4bpp tiled surface.  <a href="group__grpSchr4r.htm#ga2876b301bf8b8502c4d7b94b1d9e97a5">More...</a><br /></td></tr>
<tr class="separator:ga2876b301bf8b8502c4d7b94b1d9e97a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb2c64c78a4ef63ea26174cf6ababb77"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#gadb2c64c78a4ef63ea26174cf6ababb77">schr4r_hline</a> (const TSurface *dst, int x1, int y, int x2, u32 clr)</td></tr>
<tr class="memdesc:gadb2c64c78a4ef63ea26174cf6ababb77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a horizontal line on a 4bpp tiled surface.  <a href="group__grpSchr4r.htm#gadb2c64c78a4ef63ea26174cf6ababb77">More...</a><br /></td></tr>
<tr class="separator:gadb2c64c78a4ef63ea26174cf6ababb77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga416302d1aac4ea2315249820db1db458"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#ga416302d1aac4ea2315249820db1db458">schr4r_vline</a> (const TSurface *dst, int x, int y1, int y2, u32 clr)</td></tr>
<tr class="memdesc:ga416302d1aac4ea2315249820db1db458"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a vertical line on a 4bpp tiled surface.  <a href="group__grpSchr4r.htm#ga416302d1aac4ea2315249820db1db458">More...</a><br /></td></tr>
<tr class="separator:ga416302d1aac4ea2315249820db1db458"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga47f06b7080f50169681eb1213e50bf1b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#ga47f06b7080f50169681eb1213e50bf1b">schr4r_line</a> (const TSurface *dst, int x1, int y1, int x2, int y2, u32 clr)</td></tr>
<tr class="memdesc:ga47f06b7080f50169681eb1213e50bf1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a line on a 4bpp tiled surface.  <a href="group__grpSchr4r.htm#ga47f06b7080f50169681eb1213e50bf1b">More...</a><br /></td></tr>
<tr class="separator:ga47f06b7080f50169681eb1213e50bf1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3e28aa9b7944b7f872cda8b96cadc49c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#ga3e28aa9b7944b7f872cda8b96cadc49c">schr4r_rect</a> (const TSurface *dst, int left, int top, int right, int bottom, u32 clr)</td></tr>
<tr class="memdesc:ga3e28aa9b7944b7f872cda8b96cadc49c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Render a rectangle on a tiled canvas.  <a href="group__grpSchr4r.htm#ga3e28aa9b7944b7f872cda8b96cadc49c">More...</a><br /></td></tr>
<tr class="separator:ga3e28aa9b7944b7f872cda8b96cadc49c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafedc31ca31a2b5d49ea4715c28cdf5b9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#gafedc31ca31a2b5d49ea4715c28cdf5b9">schr4r_frame</a> (const TSurface *dst, int left, int top, int right, int bottom, u32 clr)</td></tr>
<tr class="memdesc:gafedc31ca31a2b5d49ea4715c28cdf5b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a rectangle on a 4bpp tiled surface.  <a href="group__grpSchr4r.htm#gafedc31ca31a2b5d49ea4715c28cdf5b9">More...</a><br /></td></tr>
<tr class="separator:gafedc31ca31a2b5d49ea4715c28cdf5b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga08d8dca7bcbc41a09a82ea3a0feb385d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#ga08d8dca7bcbc41a09a82ea3a0feb385d">schr4r_prep_map</a> (const TSurface *srf, u16 *map, u16 se0)</td></tr>
<tr class="memdesc:ga08d8dca7bcbc41a09a82ea3a0feb385d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare a screen-entry map for use with chr4.  <a href="group__grpSchr4r.htm#ga08d8dca7bcbc41a09a82ea3a0feb385d">More...</a><br /></td></tr>
<tr class="separator:ga08d8dca7bcbc41a09a82ea3a0feb385d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaeeb8803e471605c75f44384c35e8d77"><td class="memItemLeft" align="right" valign="top">
u32 *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#gaaeeb8803e471605c75f44384c35e8d77">schr4r_get_ptr</a> (const TSurface *srf, int x, int y)</td></tr>
<tr class="memdesc:gaaeeb8803e471605c75f44384c35e8d77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Special pointer getter for chr4: start of in-tile line. <br /></td></tr>
<tr class="separator:gaaeeb8803e471605c75f44384c35e8d77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf6fcfdec0ab7066dab5d698bfbf8e42f"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#gaf6fcfdec0ab7066dab5d698bfbf8e42f">_schr4r_plot</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:gaf6fcfdec0ab7066dab5d698bfbf8e42f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plot a single pixel on a 4bpp tiled,row-major surface; inline version. <br /></td></tr>
<tr class="separator:gaf6fcfdec0ab7066dab5d698bfbf8e42f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7e9af947ebb4c0691c99732541bb71de"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm#ga7e9af947ebb4c0691c99732541bb71de">_schr4r_get_pixel</a> (const TSurface *src, int x, int y)</td></tr>
<tr class="memdesc:ga7e9af947ebb4c0691c99732541bb71de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pixel value of <em>src</em> at (<em>x</em>, <em>y</em>); inline version. <br /></td></tr>
<tr class="separator:ga7e9af947ebb4c0691c99732541bb71de"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a4c46311a233852911fb40174d0e71f1b"><td class="memItemLeft" align="right" valign="top"><a id="a4c46311a233852911fb40174d0e71f1b"></a>
const TSurface&#160;</td><td class="memItemRight" valign="bottom"><b>m3_surface</b></td></tr>
<tr class="separator:a4c46311a233852911fb40174d0e71f1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cbc13118b72169acb4da70d9c475c79"><td class="memItemLeft" align="right" valign="top"><a id="a8cbc13118b72169acb4da70d9c475c79"></a>
<a class="el" href="group__grpTypeAttr.htm#ga99c9f8272dfdc80bf6b9422557fe6c53">EWRAM_DATA</a> TSurface&#160;</td><td class="memItemRight" valign="bottom"><b>m4_surface</b></td></tr>
<tr class="separator:a8cbc13118b72169acb4da70d9c475c79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acefa90b2ac5488222380969eaf0d8c07"><td class="memItemLeft" align="right" valign="top"><a id="acefa90b2ac5488222380969eaf0d8c07"></a>
<a class="el" href="group__grpTypeAttr.htm#ga99c9f8272dfdc80bf6b9422557fe6c53">EWRAM_DATA</a> TSurface&#160;</td><td class="memItemRight" valign="bottom"><b>m5_surface</b></td></tr>
<tr class="separator:acefa90b2ac5488222380969eaf0d8c07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a092b6dc35006aeb0765a47f69b2c9f07"><td class="memItemLeft" align="right" valign="top"><a id="a092b6dc35006aeb0765a47f69b2c9f07"></a>
const TSurfaceProcTab&#160;</td><td class="memItemRight" valign="bottom"><b>bmp16_tab</b></td></tr>
<tr class="separator:a092b6dc35006aeb0765a47f69b2c9f07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac30befbb4f1dbed75414828ba9fa0273"><td class="memItemLeft" align="right" valign="top"><a id="ac30befbb4f1dbed75414828ba9fa0273"></a>
const TSurfaceProcTab&#160;</td><td class="memItemRight" valign="bottom"><b>bmp8_tab</b></td></tr>
<tr class="separator:ac30befbb4f1dbed75414828ba9fa0273"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d8274b20e02014654816aba8e2ebbed"><td class="memItemLeft" align="right" valign="top"><a id="a3d8274b20e02014654816aba8e2ebbed"></a>
const TSurfaceProcTab&#160;</td><td class="memItemRight" valign="bottom"><b>chr4c_tab</b></td></tr>
<tr class="separator:a3d8274b20e02014654816aba8e2ebbed"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><dl class="section author"><dt>Author</dt><dd>J Vijn </dd></dl>
<dl class="section date"><dt>Date</dt><dd>20080119 - 20080514 </dd></dl>
</div></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
