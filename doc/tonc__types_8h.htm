<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>libtonc: tonc_types.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">libtonc
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.htm">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a>  </div>
  <div class="headertitle">
<div class="title">tonc_types.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structBLOCK.htm">BLOCK</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">8-word type for fast struct-copies  <a href="structBLOCK.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structTILE.htm">TILE</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">4bpp tile type, for easy indexing and copying of 4-bit tiles  <a href="structTILE.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structTILE8.htm">TILE8</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">8bpp tile type, for easy indexing and 8-bit tiles  <a href="structTILE8.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structAFF__SRC.htm">AFF_SRC</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple scale-rotation source struct.  <a href="structAFF__SRC.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structAFF__SRC__EX.htm">AFF_SRC_EX</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extended scale-rotate source struct.  <a href="structAFF__SRC__EX.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structAFF__DST.htm">AFF_DST</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple scale-rotation destination struct, BG version.  <a href="structAFF__DST.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structAFF__DST__EX.htm">AFF_DST_EX</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extended scale-rotate destination struct.  <a href="structAFF__DST__EX.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structPOINT16.htm">POINT16</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Regular bg points; range: :0010 - :001F.  <a href="structPOINT16.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structDMA__REC.htm">DMA_REC</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">DMA struct; range: 0400:00B0 - 0400:00DF.  <a href="structDMA__REC.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structTMR__REC.htm">TMR_REC</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Timer struct, range: 0400:0100 - 0400:010F.  <a href="structTMR__REC.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Object attributes.  <a href="structOBJ__ATTR.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Object affine parameters.  <a href="structOBJ__AFFINE.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga1ccb2d4775bba0f3e7fe6f53a7c74e23"><td class="memItemLeft" align="right" valign="top">
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeAttr.htm#ga1ccb2d4775bba0f3e7fe6f53a7c74e23">IWRAM_DATA</a>&#160;&#160;&#160;__attribute__((section(&quot;.iwram&quot;)))</td></tr>
<tr class="memdesc:ga1ccb2d4775bba0f3e7fe6f53a7c74e23"><td class="mdescLeft">&#160;</td><td class="mdescRight">Put variable in IWRAM (default). <br /></td></tr>
<tr class="separator:ga1ccb2d4775bba0f3e7fe6f53a7c74e23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga99c9f8272dfdc80bf6b9422557fe6c53"><td class="memItemLeft" align="right" valign="top">
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeAttr.htm#ga99c9f8272dfdc80bf6b9422557fe6c53">EWRAM_DATA</a>&#160;&#160;&#160;__attribute__((section(&quot;.ewram&quot;)))</td></tr>
<tr class="memdesc:ga99c9f8272dfdc80bf6b9422557fe6c53"><td class="mdescLeft">&#160;</td><td class="mdescRight">Put variable in EWRAM. <br /></td></tr>
<tr class="separator:ga99c9f8272dfdc80bf6b9422557fe6c53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa8e1ce25154f795538808f4f296ccb11"><td class="memItemLeft" align="right" valign="top">
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeAttr.htm#gaa8e1ce25154f795538808f4f296ccb11">EWRAM_BSS</a>&#160;&#160;&#160;__attribute__((section(&quot;.sbss&quot;)))</td></tr>
<tr class="memdesc:gaa8e1ce25154f795538808f4f296ccb11"><td class="mdescLeft">&#160;</td><td class="mdescRight">Put <b>non</b>-initialized variable in EWRAM. <br /></td></tr>
<tr class="separator:gaa8e1ce25154f795538808f4f296ccb11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad95acfb589fdcfbf418e8b6a8de7a97f"><td class="memItemLeft" align="right" valign="top">
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeAttr.htm#gad95acfb589fdcfbf418e8b6a8de7a97f">IWRAM_CODE</a>&#160;&#160;&#160;__attribute__((section(&quot;.iwram&quot;), long_call))</td></tr>
<tr class="memdesc:gad95acfb589fdcfbf418e8b6a8de7a97f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Put function in IWRAM. <br /></td></tr>
<tr class="separator:gad95acfb589fdcfbf418e8b6a8de7a97f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7c3bc561d0781b105057575246b7ec4a"><td class="memItemLeft" align="right" valign="top">
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeAttr.htm#ga7c3bc561d0781b105057575246b7ec4a">EWRAM_CODE</a>&#160;&#160;&#160;__attribute__((section(&quot;.ewram&quot;), long_call))</td></tr>
<tr class="memdesc:ga7c3bc561d0781b105057575246b7ec4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Put function in EWRAM. <br /></td></tr>
<tr class="separator:ga7c3bc561d0781b105057575246b7ec4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gada9d7622865275ae4289dff050f1589e"><td class="memItemLeft" align="right" valign="top">
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeAttr.htm#gada9d7622865275ae4289dff050f1589e">ALIGN</a>(n)&#160;&#160;&#160;__attribute__((aligned(n)))</td></tr>
<tr class="memdesc:gada9d7622865275ae4289dff050f1589e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Force a variable to an <em>n-byte</em> boundary. <br /></td></tr>
<tr class="separator:gada9d7622865275ae4289dff050f1589e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga280a402ab28c399fcc4168f2ed631acb"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeAttr.htm#ga280a402ab28c399fcc4168f2ed631acb">ALIGN4</a>&#160;&#160;&#160;__attribute__((aligned(4)))</td></tr>
<tr class="memdesc:ga280a402ab28c399fcc4168f2ed631acb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Force word alignment.  <a href="group__grpTypeAttr.htm#ga280a402ab28c399fcc4168f2ed631acb">More...</a><br /></td></tr>
<tr class="separator:ga280a402ab28c399fcc4168f2ed631acb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga36d525cf4d116b2fe4ecc00222b256f1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeAttr.htm#ga36d525cf4d116b2fe4ecc00222b256f1">PACKED</a>&#160;&#160;&#160;__attribute__((packed))</td></tr>
<tr class="memdesc:ga36d525cf4d116b2fe4ecc00222b256f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pack aggregate members.  <a href="group__grpTypeAttr.htm#ga36d525cf4d116b2fe4ecc00222b256f1">More...</a><br /></td></tr>
<tr class="separator:ga36d525cf4d116b2fe4ecc00222b256f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac1e8a42306d8e67cb94ca31c3956ee78"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeAttr.htm#gac1e8a42306d8e67cb94ca31c3956ee78">DEPRECATED</a>&#160;&#160;&#160;__attribute__((deprecated))</td></tr>
<tr class="memdesc:gac1e8a42306d8e67cb94ca31c3956ee78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deprecated notice.  <a href="group__grpTypeAttr.htm#gac1e8a42306d8e67cb94ca31c3956ee78">More...</a><br /></td></tr>
<tr class="separator:gac1e8a42306d8e67cb94ca31c3956ee78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2eb6f9e0395b47b8d5e3eeae4fe0c116"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a>&#160;&#160;&#160;static inline</td></tr>
<tr class="memdesc:ga2eb6f9e0395b47b8d5e3eeae4fe0c116"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inline function declarator.  <a href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">More...</a><br /></td></tr>
<tr class="separator:ga2eb6f9e0395b47b8d5e3eeae4fe0c116"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa8cecfc5c5c054d2875c03e77b7be15d"><td class="memItemLeft" align="right" valign="top">
#define&#160;</td><td class="memItemRight" valign="bottom"><b>TRUE</b>&#160;&#160;&#160;1</td></tr>
<tr class="separator:gaa8cecfc5c5c054d2875c03e77b7be15d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa93f0eb578d23995850d61f7d61c55c1"><td class="memItemLeft" align="right" valign="top">
#define&#160;</td><td class="memItemRight" valign="bottom"><b>FALSE</b>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gaa93f0eb578d23995850d61f7d61c55c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a070d2ce7b6bb7e5c05602aa8c308d0c4"><td class="memItemLeft" align="right" valign="top"><a id="a070d2ce7b6bb7e5c05602aa8c308d0c4"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>NULL</b>&#160;&#160;&#160;(void*)0</td></tr>
<tr class="separator:a070d2ce7b6bb7e5c05602aa8c308d0c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga5d59b80f5f37021bdfbef8845066ab42"><td class="memItemLeft" align="right" valign="top">
typedef const char *const&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypePrim.htm#ga5d59b80f5f37021bdfbef8845066ab42">CSTR</a></td></tr>
<tr class="memdesc:ga5d59b80f5f37021bdfbef8845066ab42"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type for consting a string as well as the pointer than points to it. <br /></td></tr>
<tr class="separator:ga5d59b80f5f37021bdfbef8845066ab42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga774d105a82ba25e836aa6b6d78cd1203"><td class="memItemLeft" align="right" valign="top">
typedef s32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a></td></tr>
<tr class="memdesc:ga774d105a82ba25e836aa6b6d78cd1203"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fixed point type. <br /></td></tr>
<tr class="separator:ga774d105a82ba25e836aa6b6d78cd1203"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3f7d6a7047d3cc1d04a6a1e10d7fdb00"><td class="memItemLeft" align="right" valign="top">
typedef u16&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeSec.htm#ga3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a></td></tr>
<tr class="memdesc:ga3f7d6a7047d3cc1d04a6a1e10d7fdb00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type for colors. <br /></td></tr>
<tr class="separator:ga3f7d6a7047d3cc1d04a6a1e10d7fdb00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7ef5c4b1b46ee8b401affecd48a2ed96"><td class="memItemLeft" align="right" valign="top">
typedef u16&#160;</td><td class="memItemRight" valign="bottom"><b>SCR_ENTRY</b></td></tr>
<tr class="separator:ga7ef5c4b1b46ee8b401affecd48a2ed96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0c8d5676f64b0e54a6418e6e18148b4b"><td class="memItemLeft" align="right" valign="top">
typedef u16&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeSec.htm#ga0c8d5676f64b0e54a6418e6e18148b4b">SE</a></td></tr>
<tr class="memdesc:ga0c8d5676f64b0e54a6418e6e18148b4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type for screen entries. <br /></td></tr>
<tr class="separator:ga0c8d5676f64b0e54a6418e6e18148b4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1809592059dbdfeb9ce1bc02cd7a8be0"><td class="memItemLeft" align="right" valign="top">
typedef u8&#160;</td><td class="memItemRight" valign="bottom"><b>SCR_AFF_ENTRY</b></td></tr>
<tr class="separator:ga1809592059dbdfeb9ce1bc02cd7a8be0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2ce63ae403893ef0c0d9479da19b8bf2"><td class="memItemLeft" align="right" valign="top">
typedef u8&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeSec.htm#ga2ce63ae403893ef0c0d9479da19b8bf2">SAE</a></td></tr>
<tr class="memdesc:ga2ce63ae403893ef0c0d9479da19b8bf2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type for affine screen entries. <br /></td></tr>
<tr class="separator:ga2ce63ae403893ef0c0d9479da19b8bf2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad23266cc072bcf4ca3206f5325503901"><td class="memItemLeft" align="right" valign="top">
typedef struct <a class="el" href="structTILE.htm">TILE</a>&#160;</td><td class="memItemRight" valign="bottom"><b>TILE4</b></td></tr>
<tr class="separator:gad23266cc072bcf4ca3206f5325503901"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga49f1c34f9bc2848069e616b79715e8f7"><td class="memItemLeft" align="right" valign="top">
typedef u8&#160;</td><td class="memItemRight" valign="bottom"><b>BOOL</b></td></tr>
<tr class="separator:ga49f1c34f9bc2848069e616b79715e8f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga05704207ab8887bd2ac8a8b28f158584"><td class="memItemLeft" align="right" valign="top">
typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeSec.htm#ga05704207ab8887bd2ac8a8b28f158584">fnptr</a>) (void)</td></tr>
<tr class="memdesc:ga05704207ab8887bd2ac8a8b28f158584"><td class="mdescLeft">&#160;</td><td class="mdescRight">void foo() function pointer <br /></td></tr>
<tr class="separator:ga05704207ab8887bd2ac8a8b28f158584"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae2ca8ac6f11fabf721863f4723d088bb"><td class="memItemLeft" align="right" valign="top">
typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeSec.htm#gae2ca8ac6f11fabf721863f4723d088bb">fn_v_i</a>) (int)</td></tr>
<tr class="memdesc:gae2ca8ac6f11fabf721863f4723d088bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">void foo(int x) function pointer <br /></td></tr>
<tr class="separator:gae2ca8ac6f11fabf721863f4723d088bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga14e0dd385f65703cfccd65bbf7df92c9"><td class="memItemLeft" align="right" valign="top">
typedef int(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeSec.htm#ga14e0dd385f65703cfccd65bbf7df92c9">fn_i_i</a>) (int)</td></tr>
<tr class="memdesc:ga14e0dd385f65703cfccd65bbf7df92c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">int foo(int x) function pointer <br /></td></tr>
<tr class="separator:ga14e0dd385f65703cfccd65bbf7df92c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Base types</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>Basic signed and unsigned types for 8, 16, 32 and 64-bit integers. </p><ul>
<li>
s# : signed #-bit integer.  </li>
<li>
u#/u{type} : unsigned #-bit integer. </li>
<li>
<p class="startli">e{type} : enum'ed #-bit integer.</p>
<p class="endli"></p>
</li>
</ul>
</div></td></tr>
<tr class="memitem:gaed742c436da53c1080638ce6ef7d13de"><td class="memItemLeft" align="right" valign="top">
typedef unsigned char&#160;</td><td class="memItemRight" valign="bottom"><b>u8</b></td></tr>
<tr class="separator:gaed742c436da53c1080638ce6ef7d13de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0c8186d9b9b7880309c27230bbb5e69d"><td class="memItemLeft" align="right" valign="top">
typedef unsigned char&#160;</td><td class="memItemRight" valign="bottom"><b>byte</b></td></tr>
<tr class="separator:ga0c8186d9b9b7880309c27230bbb5e69d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga65f85814a8290f9797005d3b28e7e5fc"><td class="memItemLeft" align="right" valign="top">
typedef unsigned char&#160;</td><td class="memItemRight" valign="bottom"><b>uchar</b></td></tr>
<tr class="separator:ga65f85814a8290f9797005d3b28e7e5fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf572b80811021a22a55750a7f3cf0815"><td class="memItemLeft" align="right" valign="top">
typedef unsigned char&#160;</td><td class="memItemRight" valign="bottom"><b>echar</b></td></tr>
<tr class="separator:gaf572b80811021a22a55750a7f3cf0815"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9e6c91d77e24643b888dbd1a1a590054"><td class="memItemLeft" align="right" valign="top">
typedef unsigned short&#160;</td><td class="memItemRight" valign="bottom"><b>u16</b></td></tr>
<tr class="separator:ga9e6c91d77e24643b888dbd1a1a590054"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad0b89299434a0edee78165fb76669a1d"><td class="memItemLeft" align="right" valign="top">
typedef unsigned short&#160;</td><td class="memItemRight" valign="bottom"><b>hword</b></td></tr>
<tr class="separator:gad0b89299434a0edee78165fb76669a1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab95f123a6c9bcfee6a343170ef8c5f69"><td class="memItemLeft" align="right" valign="top">
typedef unsigned short&#160;</td><td class="memItemRight" valign="bottom"><b>ushort</b></td></tr>
<tr class="separator:gab95f123a6c9bcfee6a343170ef8c5f69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4acee1e4bb9fbc3607c746386ad43a5c"><td class="memItemLeft" align="right" valign="top">
typedef unsigned short&#160;</td><td class="memItemRight" valign="bottom"><b>eshort</b></td></tr>
<tr class="separator:ga4acee1e4bb9fbc3607c746386ad43a5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga10e94b422ef0c20dcdec20d31a1f5049"><td class="memItemLeft" align="right" valign="top">
typedef unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>u32</b></td></tr>
<tr class="separator:ga10e94b422ef0c20dcdec20d31a1f5049"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabad51e07ab6d26bec9f1f786c8d65bcd"><td class="memItemLeft" align="right" valign="top">
typedef unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>word</b></td></tr>
<tr class="separator:gabad51e07ab6d26bec9f1f786c8d65bcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga91ad9478d81a7aaf2593e8d9c3d06a14"><td class="memItemLeft" align="right" valign="top">
typedef unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>uint</b></td></tr>
<tr class="separator:ga91ad9478d81a7aaf2593e8d9c3d06a14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac05606a0d3153bcc014fe6b165308fd4"><td class="memItemLeft" align="right" valign="top">
typedef unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>eint</b></td></tr>
<tr class="separator:gac05606a0d3153bcc014fe6b165308fd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad758b7a5c3f18ed79d2fcd23d9f16357"><td class="memItemLeft" align="right" valign="top">
typedef unsigned long long&#160;</td><td class="memItemRight" valign="bottom"><b>u64</b></td></tr>
<tr class="separator:gad758b7a5c3f18ed79d2fcd23d9f16357"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga151f780fb455885061d3b77ec1c90c03"><td class="memItemLeft" align="right" valign="top">
typedef signed char&#160;</td><td class="memItemRight" valign="bottom"><b>s8</b></td></tr>
<tr class="separator:ga151f780fb455885061d3b77ec1c90c03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5ffa4f640862b25ba6d4f635b78bdbe1"><td class="memItemLeft" align="right" valign="top">
typedef signed short&#160;</td><td class="memItemRight" valign="bottom"><b>s16</b></td></tr>
<tr class="separator:ga5ffa4f640862b25ba6d4f635b78bdbe1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0ce6887c26c1c49ad3be5710dd42bfd6"><td class="memItemLeft" align="right" valign="top">
typedef signed int&#160;</td><td class="memItemRight" valign="bottom"><b>s32</b></td></tr>
<tr class="separator:ga0ce6887c26c1c49ad3be5710dd42bfd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4258bfb2c3a440d06c4aaa3c2b450dde"><td class="memItemLeft" align="right" valign="top">
typedef signed long long&#160;</td><td class="memItemRight" valign="bottom"><b>s64</b></td></tr>
<tr class="separator:ga4258bfb2c3a440d06c4aaa3c2b450dde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Volatile types</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>Volatile types for registers </p>
</div></td></tr>
<tr class="memitem:ga1a2a3100a902c32a55d8b08915bce044"><td class="memItemLeft" align="right" valign="top">
typedef volatile u8&#160;</td><td class="memItemRight" valign="bottom"><b>vu8</b></td></tr>
<tr class="separator:ga1a2a3100a902c32a55d8b08915bce044"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga677aa1edce4bbb53741b1cc24eb4c035"><td class="memItemLeft" align="right" valign="top">
typedef volatile u16&#160;</td><td class="memItemRight" valign="bottom"><b>vu16</b></td></tr>
<tr class="separator:ga677aa1edce4bbb53741b1cc24eb4c035"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabcdd5d61f51cb4c472ac6637916cf72a"><td class="memItemLeft" align="right" valign="top">
typedef volatile u32&#160;</td><td class="memItemRight" valign="bottom"><b>vu32</b></td></tr>
<tr class="separator:gabcdd5d61f51cb4c472ac6637916cf72a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gace392b4d1c3911331b2fe5ddc99fdcba"><td class="memItemLeft" align="right" valign="top">
typedef volatile u64&#160;</td><td class="memItemRight" valign="bottom"><b>vu64</b></td></tr>
<tr class="separator:gace392b4d1c3911331b2fe5ddc99fdcba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga108e1a5e4c3e8322825ef7dcd45966ca"><td class="memItemLeft" align="right" valign="top">
typedef volatile s8&#160;</td><td class="memItemRight" valign="bottom"><b>vs8</b></td></tr>
<tr class="separator:ga108e1a5e4c3e8322825ef7dcd45966ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga84c4ebe721fa065d9bd514ce8d76c455"><td class="memItemLeft" align="right" valign="top">
typedef volatile s16&#160;</td><td class="memItemRight" valign="bottom"><b>vs16</b></td></tr>
<tr class="separator:ga84c4ebe721fa065d9bd514ce8d76c455"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6c6cf6e3aedfd399080c6f52c2870063"><td class="memItemLeft" align="right" valign="top">
typedef volatile s32&#160;</td><td class="memItemRight" valign="bottom"><b>vs32</b></td></tr>
<tr class="separator:ga6c6cf6e3aedfd399080c6f52c2870063"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga484adfab567791250a9fdbf0db8d3144"><td class="memItemLeft" align="right" valign="top">
typedef volatile s64&#160;</td><td class="memItemRight" valign="bottom"><b>vs64</b></td></tr>
<tr class="separator:ga484adfab567791250a9fdbf0db8d3144"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Const types</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>Const types for const function aprameters </p>
</div></td></tr>
<tr class="memitem:gafec4ecb1d0c6f7555b96832e3874ffa4"><td class="memItemLeft" align="right" valign="top">
typedef const u8&#160;</td><td class="memItemRight" valign="bottom"><b>cu8</b></td></tr>
<tr class="separator:gafec4ecb1d0c6f7555b96832e3874ffa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaea36407796a49b2f10d4a65129041ae7"><td class="memItemLeft" align="right" valign="top">
typedef const u16&#160;</td><td class="memItemRight" valign="bottom"><b>cu16</b></td></tr>
<tr class="separator:gaea36407796a49b2f10d4a65129041ae7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaafd52a4ce346619f1d5566155bb8f0db"><td class="memItemLeft" align="right" valign="top">
typedef const u32&#160;</td><td class="memItemRight" valign="bottom"><b>cu32</b></td></tr>
<tr class="separator:gaafd52a4ce346619f1d5566155bb8f0db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga98236f2c2ec37ca4397b1793c17aeab5"><td class="memItemLeft" align="right" valign="top">
typedef const u64&#160;</td><td class="memItemRight" valign="bottom"><b>cu64</b></td></tr>
<tr class="separator:ga98236f2c2ec37ca4397b1793c17aeab5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae6324c807c16782f33f33672a02d3e87"><td class="memItemLeft" align="right" valign="top">
typedef const s8&#160;</td><td class="memItemRight" valign="bottom"><b>cs8</b></td></tr>
<tr class="separator:gae6324c807c16782f33f33672a02d3e87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad0bf98b7006097d71cfe4729282e99f4"><td class="memItemLeft" align="right" valign="top">
typedef const s16&#160;</td><td class="memItemRight" valign="bottom"><b>cs16</b></td></tr>
<tr class="separator:gad0bf98b7006097d71cfe4729282e99f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadbbfe40eaf91710509032a2faa3640f3"><td class="memItemLeft" align="right" valign="top">
typedef const s32&#160;</td><td class="memItemRight" valign="bottom"><b>cs32</b></td></tr>
<tr class="separator:gadbbfe40eaf91710509032a2faa3640f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga49ba27a8f62c4186b5ab6b92b534df4c"><td class="memItemLeft" align="right" valign="top">
typedef const s64&#160;</td><td class="memItemRight" valign="bottom"><b>cs64</b></td></tr>
<tr class="separator:ga49ba27a8f62c4186b5ab6b92b534df4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">affine structs</div></td></tr>
<tr class="memitem:ga950a8dff632f432ef3c8241c444f7936"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structAFF__SRC.htm">AFF_SRC</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeSec.htm#ga950a8dff632f432ef3c8241c444f7936">AFF_SRC</a></td></tr>
<tr class="memdesc:ga950a8dff632f432ef3c8241c444f7936"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple scale-rotation source struct.  <a href="group__grpTypeSec.htm#ga950a8dff632f432ef3c8241c444f7936">More...</a><br /></td></tr>
<tr class="separator:ga950a8dff632f432ef3c8241c444f7936"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae68945366d768a5cbed2338280044461"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structAFF__SRC.htm">AFF_SRC</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeSec.htm#gae68945366d768a5cbed2338280044461">ObjAffineSource</a></td></tr>
<tr class="memdesc:gae68945366d768a5cbed2338280044461"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple scale-rotation source struct.  <a href="group__grpTypeSec.htm#gae68945366d768a5cbed2338280044461">More...</a><br /></td></tr>
<tr class="separator:gae68945366d768a5cbed2338280044461"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5544feedfdfe912aab06fae58f2056c0"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structAFF__SRC__EX.htm">AFF_SRC_EX</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeSec.htm#ga5544feedfdfe912aab06fae58f2056c0">AFF_SRC_EX</a></td></tr>
<tr class="memdesc:ga5544feedfdfe912aab06fae58f2056c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extended scale-rotate source struct.  <a href="group__grpTypeSec.htm#ga5544feedfdfe912aab06fae58f2056c0">More...</a><br /></td></tr>
<tr class="separator:ga5544feedfdfe912aab06fae58f2056c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga80211dd9fa87a2e69e337e4e07bf6ca3"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structAFF__SRC__EX.htm">AFF_SRC_EX</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeSec.htm#ga80211dd9fa87a2e69e337e4e07bf6ca3">BgAffineSource</a></td></tr>
<tr class="memdesc:ga80211dd9fa87a2e69e337e4e07bf6ca3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple scale-rotation source struct.  <a href="group__grpTypeSec.htm#ga80211dd9fa87a2e69e337e4e07bf6ca3">More...</a><br /></td></tr>
<tr class="separator:ga80211dd9fa87a2e69e337e4e07bf6ca3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga34adf1ed37b93a86221c766ea47566bb"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structAFF__DST.htm">AFF_DST</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeSec.htm#ga34adf1ed37b93a86221c766ea47566bb">AFF_DST</a></td></tr>
<tr class="memdesc:ga34adf1ed37b93a86221c766ea47566bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple scale-rotation destination struct, BG version.  <a href="group__grpTypeSec.htm#ga34adf1ed37b93a86221c766ea47566bb">More...</a><br /></td></tr>
<tr class="separator:ga34adf1ed37b93a86221c766ea47566bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8f8afc0fa98449cbae1b868e19ca8e09"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structAFF__DST.htm">AFF_DST</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeSec.htm#ga8f8afc0fa98449cbae1b868e19ca8e09">ObjAffineDest</a></td></tr>
<tr class="memdesc:ga8f8afc0fa98449cbae1b868e19ca8e09"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple scale-rotation source struct.  <a href="group__grpTypeSec.htm#ga8f8afc0fa98449cbae1b868e19ca8e09">More...</a><br /></td></tr>
<tr class="separator:ga8f8afc0fa98449cbae1b868e19ca8e09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa66284ff16dccfa12543d8dd0ba43203"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structAFF__DST__EX.htm">AFF_DST_EX</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeSec.htm#gaa66284ff16dccfa12543d8dd0ba43203">AFF_DST_EX</a></td></tr>
<tr class="memdesc:gaa66284ff16dccfa12543d8dd0ba43203"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extended scale-rotate destination struct.  <a href="group__grpTypeSec.htm#gaa66284ff16dccfa12543d8dd0ba43203">More...</a><br /></td></tr>
<tr class="separator:gaa66284ff16dccfa12543d8dd0ba43203"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac73f1d4c3c88e67f3418f2c65ac3775b"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structAFF__DST__EX.htm">AFF_DST_EX</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeSec.htm#gac73f1d4c3c88e67f3418f2c65ac3775b">BgAffineDest</a></td></tr>
<tr class="memdesc:gac73f1d4c3c88e67f3418f2c65ac3775b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple scale-rotation source struct.  <a href="group__grpTypeSec.htm#gac73f1d4c3c88e67f3418f2c65ac3775b">More...</a><br /></td></tr>
<tr class="separator:gac73f1d4c3c88e67f3418f2c65ac3775b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">IO register types</div></td></tr>
<tr class="memitem:gae50f505afdc8978db75bee3e1b543ca8"><td class="memItemLeft" align="right" valign="top">
typedef struct <a class="el" href="structPOINT16.htm">POINT16</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeTert.htm#gae50f505afdc8978db75bee3e1b543ca8">POINT16</a></td></tr>
<tr class="memdesc:gae50f505afdc8978db75bee3e1b543ca8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Regular bg points; range: :0010 - :001F. <br /></td></tr>
<tr class="separator:gae50f505afdc8978db75bee3e1b543ca8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2477d74c7a531d34495b2a826ae0b6ce"><td class="memItemLeft" align="right" valign="top">
typedef struct <a class="el" href="structPOINT16.htm">POINT16</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeTert.htm#ga2477d74c7a531d34495b2a826ae0b6ce">BG_POINT</a></td></tr>
<tr class="memdesc:ga2477d74c7a531d34495b2a826ae0b6ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Regular bg points; range: :0010 - :001F. <br /></td></tr>
<tr class="separator:ga2477d74c7a531d34495b2a826ae0b6ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabd684ef1bcc16437414d6f59f72572ac"><td class="memItemLeft" align="right" valign="top">
typedef struct <a class="el" href="structAFF__DST__EX.htm">AFF_DST_EX</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a></td></tr>
<tr class="memdesc:gabd684ef1bcc16437414d6f59f72572ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Affine parameters for backgrounds; range : 0400:0020 - 0400:003F. <br /></td></tr>
<tr class="separator:gabd684ef1bcc16437414d6f59f72572ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b697b6e0d234f97fd269908f95d412b"><td class="memItemLeft" align="right" valign="top">
typedef struct <a class="el" href="structDMA__REC.htm">DMA_REC</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeTert.htm#ga3b697b6e0d234f97fd269908f95d412b">DMA_REC</a></td></tr>
<tr class="memdesc:ga3b697b6e0d234f97fd269908f95d412b"><td class="mdescLeft">&#160;</td><td class="mdescRight">DMA struct; range: 0400:00B0 - 0400:00DF. <br /></td></tr>
<tr class="separator:ga3b697b6e0d234f97fd269908f95d412b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabd3a420edf6a72df3f034800e2fda7ea"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structTMR__REC.htm">TMR_REC</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeTert.htm#gabd3a420edf6a72df3f034800e2fda7ea">TMR_REC</a></td></tr>
<tr class="memdesc:gabd3a420edf6a72df3f034800e2fda7ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Timer struct, range: 0400:0100 - 0400:010F.  <a href="group__grpTypeTert.htm#gabd3a420edf6a72df3f034800e2fda7ea">More...</a><br /></td></tr>
<tr class="separator:gabd3a420edf6a72df3f034800e2fda7ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">PAL types</div></td></tr>
<tr class="memitem:gac73bc9fa8211aeb4fa0e86a2dbb264a8"><td class="memItemLeft" align="right" valign="top">
typedef <a class="el" href="group__grpTypeSec.htm#ga3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeTert.htm#gac73bc9fa8211aeb4fa0e86a2dbb264a8">PALBANK</a>[16]</td></tr>
<tr class="memdesc:gac73bc9fa8211aeb4fa0e86a2dbb264a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Palette bank type, for 16-color palette banks. <br /></td></tr>
<tr class="separator:gac73bc9fa8211aeb4fa0e86a2dbb264a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">VRAM array types</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>These types allow VRAM access as arrays or matrices in their most natural types. </p>
</div></td></tr>
<tr class="memitem:ga29b89654fdcd4d3e0df42cee3ae95615"><td class="memItemLeft" align="right" valign="top">
typedef SCR_ENTRY&#160;</td><td class="memItemRight" valign="bottom"><b>SCREENLINE</b>[32]</td></tr>
<tr class="separator:ga29b89654fdcd4d3e0df42cee3ae95615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad7bedfc3e721b8cb3cc03731667fcf90"><td class="memItemLeft" align="right" valign="top">
typedef SCR_ENTRY&#160;</td><td class="memItemRight" valign="bottom"><b>SCREENMAT</b>[32][32]</td></tr>
<tr class="separator:gad7bedfc3e721b8cb3cc03731667fcf90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7af49c74035fb5884f17fdd8a5b6ec77"><td class="memItemLeft" align="right" valign="top">
typedef SCR_ENTRY&#160;</td><td class="memItemRight" valign="bottom"><b>SCREENBLOCK</b>[1024]</td></tr>
<tr class="separator:ga7af49c74035fb5884f17fdd8a5b6ec77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadf42817ef5fcb26f817588119cc750ca"><td class="memItemLeft" align="right" valign="top">
typedef <a class="el" href="group__grpTypeSec.htm#ga3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a>&#160;</td><td class="memItemRight" valign="bottom"><b>M3LINE</b>[240]</td></tr>
<tr class="separator:gadf42817ef5fcb26f817588119cc750ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga240b7526d9a98756f5d1e1dbb977397c"><td class="memItemLeft" align="right" valign="top">
typedef u8&#160;</td><td class="memItemRight" valign="bottom"><b>M4LINE</b>[240]</td></tr>
<tr class="separator:ga240b7526d9a98756f5d1e1dbb977397c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6fe50a02935c04db9dc8f1346ad57d96"><td class="memItemLeft" align="right" valign="top">
typedef <a class="el" href="group__grpTypeSec.htm#ga3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a>&#160;</td><td class="memItemRight" valign="bottom"><b>M5LINE</b>[160]</td></tr>
<tr class="separator:ga6fe50a02935c04db9dc8f1346ad57d96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga65e5696109b1fa085d05b78f9bf34b58"><td class="memItemLeft" align="right" valign="top">
typedef <a class="el" href="structTILE.htm">TILE</a>&#160;</td><td class="memItemRight" valign="bottom"><b>CHARBLOCK</b>[512]</td></tr>
<tr class="separator:ga65e5696109b1fa085d05b78f9bf34b58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa2201a12071f985d0dc9716ac9e18953"><td class="memItemLeft" align="right" valign="top">
typedef <a class="el" href="structTILE8.htm">TILE8</a>&#160;</td><td class="memItemRight" valign="bottom"><b>CHARBLOCK8</b>[256]</td></tr>
<tr class="separator:gaa2201a12071f985d0dc9716ac9e18953"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">OAM structs</div></td></tr>
<tr><td colspan="2"><div class="groupText"><dl class="section note"><dt>Note</dt><dd>These <a class="el" href="structOBJ__ATTR.htm" title="Object attributes. ">OBJ_ATTR</a> and <a class="el" href="structOBJ__AFFINE.htm" title="Object affine parameters. ">OBJ_AFFINE</a> structs are interlaced in OAM. When using affine objs, struct/DMA/mem copies will give bad results. </dd></dl>
</div></td></tr>
<tr class="memitem:ga1af76720b14746e419ca9c84eb15b4b6"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeTert.htm#ga1af76720b14746e419ca9c84eb15b4b6">OBJ_ATTR</a></td></tr>
<tr class="memdesc:ga1af76720b14746e419ca9c84eb15b4b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Object attributes.  <a href="group__grpTypeTert.htm#ga1af76720b14746e419ca9c84eb15b4b6">More...</a><br /></td></tr>
<tr class="separator:ga1af76720b14746e419ca9c84eb15b4b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga28f379d0628882f0883da483caf52fc0"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeTert.htm#ga28f379d0628882f0883da483caf52fc0">OBJ_AFFINE</a></td></tr>
<tr class="memdesc:ga28f379d0628882f0883da483caf52fc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Object affine parameters.  <a href="group__grpTypeTert.htm#ga28f379d0628882f0883da483caf52fc0">More...</a><br /></td></tr>
<tr class="separator:ga28f379d0628882f0883da483caf52fc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:gaf6a258d8f3ee5206d682d799316314b1"><td class="memItemLeft" align="right" valign="top"><a id="gaf6a258d8f3ee5206d682d799316314b1"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpTypeSec.htm#gaf6a258d8f3ee5206d682d799316314b1">bool</a> { <b>false</b>, 
<b>true</b>
 }<tr class="memdesc:gaf6a258d8f3ee5206d682d799316314b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Boolean type. <br /></td></tr>
</td></tr>
<tr class="separator:gaf6a258d8f3ee5206d682d799316314b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><dl class="section author"><dt>Author</dt><dd>J Vijn </dd></dl>
<dl class="section date"><dt>Date</dt><dd>20060508 - 20080111 </dd></dl>
</div></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
