<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>libtonc: Fixed point math</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">libtonc
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Fixed point math<div class="ingroups"><a class="el" href="group__grpMath.htm">Math</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga8edc3240c157eecf1131299de27dea7a"><td class="memItemLeft" align="right" valign="top"><a id="ga8edc3240c157eecf1131299de27dea7a"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>FIX_SHIFT</b>&#160;&#160;&#160;8</td></tr>
<tr class="separator:ga8edc3240c157eecf1131299de27dea7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2074879063dde33e28fb3ccffdd5e6e4"><td class="memItemLeft" align="right" valign="top"><a id="ga2074879063dde33e28fb3ccffdd5e6e4"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>FIX_SCALE</b>&#160;&#160;&#160;( 1&lt;&lt;FIX_SHIFT		)</td></tr>
<tr class="separator:ga2074879063dde33e28fb3ccffdd5e6e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga88d27014adc2dc791584fcb71ff34641"><td class="memItemLeft" align="right" valign="top"><a id="ga88d27014adc2dc791584fcb71ff34641"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>FIX_MASK</b>&#160;&#160;&#160;( FIX_SCALE-1		)</td></tr>
<tr class="separator:ga88d27014adc2dc791584fcb71ff34641"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadc9777294ed3349f0ac3b77b58cf24e2"><td class="memItemLeft" align="right" valign="top"><a id="gadc9777294ed3349f0ac3b77b58cf24e2"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>FIX_SCALEF</b>&#160;&#160;&#160;( (float)FIX_SCALE	)</td></tr>
<tr class="separator:gadc9777294ed3349f0ac3b77b58cf24e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafb3623ba637d3ac3a3cf737146aace15"><td class="memItemLeft" align="right" valign="top"><a id="gafb3623ba637d3ac3a3cf737146aace15"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>FIX_SCALEF_INV</b>&#160;&#160;&#160;( 1.0/FIX_SCALEF	)</td></tr>
<tr class="separator:gafb3623ba637d3ac3a3cf737146aace15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4ceea0e31ae25efeaa7a4c76d85ed950"><td class="memItemLeft" align="right" valign="top"><a id="ga4ceea0e31ae25efeaa7a4c76d85ed950"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>FIX_ONE</b>&#160;&#160;&#160;FIX_SCALE</td></tr>
<tr class="separator:ga4ceea0e31ae25efeaa7a4c76d85ed950"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa2c6ca025513a3dce2ece4e4df98e78b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpMathFixed.htm#gaa2c6ca025513a3dce2ece4e4df98e78b">FX_RECIPROCAL</a>(a,  fp)&#160;&#160;&#160;( ((1&lt;&lt;(fp))+(a)-1)/(a) )</td></tr>
<tr class="memdesc:gaa2c6ca025513a3dce2ece4e4df98e78b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the fixed point reciprocal of <em>a</em>, in <em>fp</em> fractional bits.  <a href="#gaa2c6ca025513a3dce2ece4e4df98e78b">More...</a><br /></td></tr>
<tr class="separator:gaa2c6ca025513a3dce2ece4e4df98e78b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga21aa7abfc00ca9f14af51ac995762e5e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpMathFixed.htm#ga21aa7abfc00ca9f14af51ac995762e5e">FX_RECIMUL</a>(x,  a,  fp)&#160;&#160;&#160;( ((x)*((1&lt;&lt;(fp))+(a)-1)/(a))&gt;&gt;(fp) )</td></tr>
<tr class="memdesc:ga21aa7abfc00ca9f14af51ac995762e5e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform the division <em>x/</em> <em>a</em> by reciprocal multiplication.  <a href="#ga21aa7abfc00ca9f14af51ac995762e5e">More...</a><br /></td></tr>
<tr class="separator:ga21aa7abfc00ca9f14af51ac995762e5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gae82b52a9c19e0acd431e87fa69a395a6"><td class="memItemLeft" align="right" valign="top"><a id="gae82b52a9c19e0acd431e87fa69a395a6"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpMathFixed.htm#gae82b52a9c19e0acd431e87fa69a395a6">int2fx</a> (int d)</td></tr>
<tr class="memdesc:gae82b52a9c19e0acd431e87fa69a395a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert an integer to fixed-point. <br /></td></tr>
<tr class="separator:gae82b52a9c19e0acd431e87fa69a395a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeb1d53c741048806c70a6dd2ad62fe38"><td class="memItemLeft" align="right" valign="top"><a id="gaeb1d53c741048806c70a6dd2ad62fe38"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpMathFixed.htm#gaeb1d53c741048806c70a6dd2ad62fe38">float2fx</a> (float f)</td></tr>
<tr class="memdesc:gaeb1d53c741048806c70a6dd2ad62fe38"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a float to fixed-point. <br /></td></tr>
<tr class="separator:gaeb1d53c741048806c70a6dd2ad62fe38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf768faff36dc3255ef65534d0fd762af"><td class="memItemLeft" align="right" valign="top"><a id="gaf768faff36dc3255ef65534d0fd762af"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpMathFixed.htm#gaf768faff36dc3255ef65534d0fd762af">fx2uint</a> (<a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> fx)</td></tr>
<tr class="memdesc:gaf768faff36dc3255ef65534d0fd762af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a FIXED point value to an unsigned integer (orly?). <br /></td></tr>
<tr class="separator:gaf768faff36dc3255ef65534d0fd762af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2675c33fa45909aa496f9d9bc4eaa093"><td class="memItemLeft" align="right" valign="top"><a id="ga2675c33fa45909aa496f9d9bc4eaa093"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpMathFixed.htm#ga2675c33fa45909aa496f9d9bc4eaa093">fx2ufrac</a> (<a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> fx)</td></tr>
<tr class="memdesc:ga2675c33fa45909aa496f9d9bc4eaa093"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the unsigned fractional part of a fixed point value (orly?). <br /></td></tr>
<tr class="separator:ga2675c33fa45909aa496f9d9bc4eaa093"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7e07c5688c264481a5c0c569b2bcbac6"><td class="memItemLeft" align="right" valign="top"><a id="ga7e07c5688c264481a5c0c569b2bcbac6"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpMathFixed.htm#ga7e07c5688c264481a5c0c569b2bcbac6">fx2int</a> (<a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> fx)</td></tr>
<tr class="memdesc:ga7e07c5688c264481a5c0c569b2bcbac6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a FIXED point value to an signed integer. <br /></td></tr>
<tr class="separator:ga7e07c5688c264481a5c0c569b2bcbac6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga49c6596c768b861a3b10cec30f98b0c1"><td class="memItemLeft" align="right" valign="top"><a id="ga49c6596c768b861a3b10cec30f98b0c1"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpMathFixed.htm#ga49c6596c768b861a3b10cec30f98b0c1">fx2float</a> (<a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> fx)</td></tr>
<tr class="memdesc:ga49c6596c768b861a3b10cec30f98b0c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a fixed point value to floating point. <br /></td></tr>
<tr class="separator:ga49c6596c768b861a3b10cec30f98b0c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3379c17e2378c724f625f1adbbe8d056"><td class="memItemLeft" align="right" valign="top"><a id="ga3379c17e2378c724f625f1adbbe8d056"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpMathFixed.htm#ga3379c17e2378c724f625f1adbbe8d056">fxadd</a> (<a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> fa, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> fb)</td></tr>
<tr class="memdesc:ga3379c17e2378c724f625f1adbbe8d056"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add two fixed point values. <br /></td></tr>
<tr class="separator:ga3379c17e2378c724f625f1adbbe8d056"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4ae89b6900c92c71cc7382b4299e89b"><td class="memItemLeft" align="right" valign="top"><a id="gae4ae89b6900c92c71cc7382b4299e89b"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpMathFixed.htm#gae4ae89b6900c92c71cc7382b4299e89b">fxsub</a> (<a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> fa, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> fb)</td></tr>
<tr class="memdesc:gae4ae89b6900c92c71cc7382b4299e89b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtract two fixed point values. <br /></td></tr>
<tr class="separator:gae4ae89b6900c92c71cc7382b4299e89b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7eda796af07c01a84d76717ccee3e4fa"><td class="memItemLeft" align="right" valign="top"><a id="ga7eda796af07c01a84d76717ccee3e4fa"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpMathFixed.htm#ga7eda796af07c01a84d76717ccee3e4fa">fxmul</a> (<a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> fa, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> fb)</td></tr>
<tr class="memdesc:ga7eda796af07c01a84d76717ccee3e4fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiply two fixed point values. <br /></td></tr>
<tr class="separator:ga7eda796af07c01a84d76717ccee3e4fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6e75438cb3408d52fc77e627440ec3b7"><td class="memItemLeft" align="right" valign="top"><a id="ga6e75438cb3408d52fc77e627440ec3b7"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpMathFixed.htm#ga6e75438cb3408d52fc77e627440ec3b7">fxdiv</a> (<a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> fa, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> fb)</td></tr>
<tr class="memdesc:ga6e75438cb3408d52fc77e627440ec3b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divide two fixed point values. <br /></td></tr>
<tr class="separator:ga6e75438cb3408d52fc77e627440ec3b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa49e474441f56fd4b7c83dcfec05fc69"><td class="memItemLeft" align="right" valign="top"><a id="gaa49e474441f56fd4b7c83dcfec05fc69"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpMathFixed.htm#gaa49e474441f56fd4b7c83dcfec05fc69">fxmul64</a> (<a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> fa, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> fb)</td></tr>
<tr class="memdesc:gaa49e474441f56fd4b7c83dcfec05fc69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiply two fixed point values using 64bit math. <br /></td></tr>
<tr class="separator:gaa49e474441f56fd4b7c83dcfec05fc69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6dbbf4d89462d48581b11859b117ee7d"><td class="memItemLeft" align="right" valign="top"><a id="ga6dbbf4d89462d48581b11859b117ee7d"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpMathFixed.htm#ga6dbbf4d89462d48581b11859b117ee7d">fxdiv64</a> (<a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> fa, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> fb)</td></tr>
<tr class="memdesc:ga6dbbf4d89462d48581b11859b117ee7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divide two fixed point values using 64bit math. <br /></td></tr>
<tr class="separator:ga6dbbf4d89462d48581b11859b117ee7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="ga21aa7abfc00ca9f14af51ac995762e5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga21aa7abfc00ca9f14af51ac995762e5e">&#9670;&nbsp;</a></span>FX_RECIMUL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FX_RECIMUL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">fp&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;( ((x)*((1&lt;&lt;(fp))+(a)-1)/(a))&gt;&gt;(fp) )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Perform the division <em>x/</em> <em>a</em> by reciprocal multiplication. </p>
<p>Division is slow, but you can approximate division by a constant by multiplying with its reciprocal: x/a vs x*(1/a). This routine gives the reciprocal of <em>a</em> as a fixed point number with <em>fp</em> fractional bits. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>Value to take the reciprocal of. </td></tr>
    <tr><td class="paramname">fp</td><td>Number of fixed point bits </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>The routine does do a division, but the compiler will optimize it to a single constant ... <em>if</em> both <em>a</em> and <em>fp</em> are constants! </dd>
<dd>
Rules for safe reciprocal division, using n = 2<sup>fp</sup> and m = (n+a-1)/a (i.e., rounding up) <ul>
<li>Maximum safe numerator <em>x:</em> x &lt; n/(m*a-n) </li>
<li>Minimum n for known <em>x:</em> n &gt; x*(a-1) </li>
</ul>
</dd></dl>

</div>
</div>
<a id="gaa2c6ca025513a3dce2ece4e4df98e78b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa2c6ca025513a3dce2ece4e4df98e78b">&#9670;&nbsp;</a></span>FX_RECIPROCAL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FX_RECIPROCAL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">fp&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;( ((1&lt;&lt;(fp))+(a)-1)/(a) )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the fixed point reciprocal of <em>a</em>, in <em>fp</em> fractional bits. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>Value to take the reciprocal of. </td></tr>
    <tr><td class="paramname">fp</td><td>Number of fixed point bits </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>The routine does do a division, but the compiler will optimize it to a single constant ... <em>if</em> both <em>a</em> and <em>fp</em> are constants! </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__grpMathFixed.htm#ga21aa7abfc00ca9f14af51ac995762e5e" title="Perform the division x/ a by reciprocal multiplication. ">FX_RECIMUL</a> </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
