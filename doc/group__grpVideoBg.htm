<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>libtonc: Tiled Backgrounds</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">libtonc
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Tiled Backgrounds<div class="ingroups"><a class="el" href="group__grpVideo.htm">Video</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:gae86fe3f21840826bf0272cfebea463ba"><td class="memItemLeft" align="right" valign="top"><a id="gae86fe3f21840826bf0272cfebea463ba"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>CBB_CLEAR</b>(cbb)&#160;&#160;&#160;<a class="el" href="group__grpData.htm#ga79b00ab4b4cab447be9fed3b14e7fdfa">memset32</a>(&amp;<a class="el" href="group__grpMemArray.htm#gad7614b181363750123607174138868cc">tile_mem</a>[cbb], 0, <a class="el" href="group__grpMemmap.htm#ga645b0f654ddfbcbdffe456c8cfb5473f">CBB_SIZE</a>/4)</td></tr>
<tr class="separator:gae86fe3f21840826bf0272cfebea463ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga149fad2d117fc826b8caf2b55682f3b2"><td class="memItemLeft" align="right" valign="top"><a id="ga149fad2d117fc826b8caf2b55682f3b2"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SBB_CLEAR</b>(sbb)&#160;&#160;&#160;<a class="el" href="group__grpData.htm#ga79b00ab4b4cab447be9fed3b14e7fdfa">memset32</a>(&amp;<a class="el" href="group__grpMemArray.htm#ga2df9ef65bbc1464d3ea50b4151b8f534">se_mem</a>[sbb], 0, <a class="el" href="group__grpMemmap.htm#ga1332170012395026de8afa8770f45ee6">SBB_SIZE</a>/4)</td></tr>
<tr class="separator:ga149fad2d117fc826b8caf2b55682f3b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0121a2be09e3d8656630269fc59f8cf7"><td class="memItemLeft" align="right" valign="top"><a id="ga0121a2be09e3d8656630269fc59f8cf7"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SBB_CLEAR_ROW</b>(sbb,  row)&#160;&#160;&#160;<a class="el" href="group__grpData.htm#ga79b00ab4b4cab447be9fed3b14e7fdfa">memset32</a>(&amp;<a class="el" href="group__grpMemArray.htm#ga2df9ef65bbc1464d3ea50b4151b8f534">se_mem</a>[sbb][(row)*32], 0, 32/2)</td></tr>
<tr class="separator:ga0121a2be09e3d8656630269fc59f8cf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2b097ef6836bcc9d5f1c004a8b983e2d"><td class="memItemLeft" align="right" valign="top"><a id="ga2b097ef6836bcc9d5f1c004a8b983e2d"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>__BG_TYPES</b>&#160;&#160;&#160;((0x0C7F&lt;&lt;16)|(0x0C40))</td></tr>
<tr class="separator:ga2b097ef6836bcc9d5f1c004a8b983e2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga14d94be9e15340500f8a67b65e55c008"><td class="memItemLeft" align="right" valign="top"><a id="ga14d94be9e15340500f8a67b65e55c008"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>BG_IS_AFFINE</b>(n)&#160;&#160;&#160;( (__BG_TYPES&gt;&gt;(4*(<a class="el" href="group__grpReg.htm#ga9a5b1a8377f77fcfde2069c040bcdfdf">REG_DISPCNT</a>&amp;7)+(n)   ))&amp;1 )</td></tr>
<tr class="separator:ga14d94be9e15340500f8a67b65e55c008"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga18124b9b295ef6ec10bc63a83b17b8c7"><td class="memItemLeft" align="right" valign="top"><a id="ga18124b9b295ef6ec10bc63a83b17b8c7"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>BG_IS_AVAIL</b>(n)&#160;&#160;&#160;( (__BG_TYPES&gt;&gt;(4*(<a class="el" href="group__grpReg.htm#ga9a5b1a8377f77fcfde2069c040bcdfdf">REG_DISPCNT</a>&amp;7)+(n)+16))&amp;1 )</td></tr>
<tr class="separator:ga18124b9b295ef6ec10bc63a83b17b8c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga2125aa4286830ed213dc582e94734d26"><td class="memItemLeft" align="right" valign="top"><a id="ga2125aa4286830ed213dc582e94734d26"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoBg.htm#ga2125aa4286830ed213dc582e94734d26">se_fill</a> (SCR_ENTRY *sbb, SCR_ENTRY se)</td></tr>
<tr class="memdesc:ga2125aa4286830ed213dc582e94734d26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fill screenblock <em>sbb</em> with <em>se</em>. <br /></td></tr>
<tr class="separator:ga2125aa4286830ed213dc582e94734d26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0d5f23c61d3ff2f8ad513553338c7263"><td class="memItemLeft" align="right" valign="top"><a id="ga0d5f23c61d3ff2f8ad513553338c7263"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoBg.htm#ga0d5f23c61d3ff2f8ad513553338c7263">se_plot</a> (SCR_ENTRY *sbb, int x, int y, SCR_ENTRY se)</td></tr>
<tr class="memdesc:ga0d5f23c61d3ff2f8ad513553338c7263"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plot a screen entry at (<em>x</em>,<em>y</em>) of screenblock <em>sbb</em>. <br /></td></tr>
<tr class="separator:ga0d5f23c61d3ff2f8ad513553338c7263"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9510b038adb0e045c4c980f1472a15cd"><td class="memItemLeft" align="right" valign="top"><a id="ga9510b038adb0e045c4c980f1472a15cd"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoBg.htm#ga9510b038adb0e045c4c980f1472a15cd">se_rect</a> (SCR_ENTRY *sbb, int left, int top, int right, int bottom, SCR_ENTRY se)</td></tr>
<tr class="memdesc:ga9510b038adb0e045c4c980f1472a15cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fill a rectangle on <em>sbb</em> with <em>se</em>. <br /></td></tr>
<tr class="separator:ga9510b038adb0e045c4c980f1472a15cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga21d0366fa0f3a0a287e1e193f931200a"><td class="memItemLeft" align="right" valign="top"><a id="ga21d0366fa0f3a0a287e1e193f931200a"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoBg.htm#ga21d0366fa0f3a0a287e1e193f931200a">se_frame</a> (SCR_ENTRY *sbb, int left, int top, int right, int bottom, SCR_ENTRY se)</td></tr>
<tr class="memdesc:ga21d0366fa0f3a0a287e1e193f931200a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a border on <em>sbb</em> with <em>se</em>. <br /></td></tr>
<tr class="separator:ga21d0366fa0f3a0a287e1e193f931200a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9a4d24635820ee7459e7efa5911067bb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoBg.htm#ga9a4d24635820ee7459e7efa5911067bb">se_window</a> (SCR_ENTRY *sbb, int left, int top, int right, int bottom, SCR_ENTRY se0)</td></tr>
<tr class="memdesc:ga9a4d24635820ee7459e7efa5911067bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a framed rectangle.  <a href="#ga9a4d24635820ee7459e7efa5911067bb">More...</a><br /></td></tr>
<tr class="separator:ga9a4d24635820ee7459e7efa5911067bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d3e74fb47545e9c1ca61793aa2b9902"><td class="memItemLeft" align="right" valign="top"><a id="ga6d3e74fb47545e9c1ca61793aa2b9902"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>se_hline</b> (SCR_ENTRY *sbb, int x0, int x1, int y, SCR_ENTRY se)</td></tr>
<tr class="separator:ga6d3e74fb47545e9c1ca61793aa2b9902"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae898a823a28b8d9d833ebf6a0ecf6ba8"><td class="memItemLeft" align="right" valign="top"><a id="gae898a823a28b8d9d833ebf6a0ecf6ba8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>se_vline</b> (SCR_ENTRY *sbb, int x, int y0, int y1, SCR_ENTRY se)</td></tr>
<tr class="separator:gae898a823a28b8d9d833ebf6a0ecf6ba8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9f93f5138ff3d47d00a044f41bf654c2"><td class="memItemLeft" align="right" valign="top"><a id="ga9f93f5138ff3d47d00a044f41bf654c2"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoBg.htm#ga9f93f5138ff3d47d00a044f41bf654c2">bg_aff_set</a> (<a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pa, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pb, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pc, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pd)</td></tr>
<tr class="memdesc:ga9f93f5138ff3d47d00a044f41bf654c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the elements of an <em>bg</em> affine matrix. <br /></td></tr>
<tr class="separator:ga9f93f5138ff3d47d00a044f41bf654c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafbcf430c4a1845ff048a712f1dd136ab"><td class="memItemLeft" align="right" valign="top"><a id="gafbcf430c4a1845ff048a712f1dd136ab"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoBg.htm#gafbcf430c4a1845ff048a712f1dd136ab">bg_aff_identity</a> (<a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff)</td></tr>
<tr class="memdesc:gafbcf430c4a1845ff048a712f1dd136ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set an bg affine matrix to the identity matrix. <br /></td></tr>
<tr class="separator:gafbcf430c4a1845ff048a712f1dd136ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab0a134e7485c7dda4d6ed72d1784247b"><td class="memItemLeft" align="right" valign="top"><a id="gab0a134e7485c7dda4d6ed72d1784247b"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoBg.htm#gab0a134e7485c7dda4d6ed72d1784247b">bg_aff_scale</a> (<a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> sx, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> sy)</td></tr>
<tr class="memdesc:gab0a134e7485c7dda4d6ed72d1784247b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set an bg affine matrix for scaling. <br /></td></tr>
<tr class="separator:gab0a134e7485c7dda4d6ed72d1784247b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7bd2527dbe25037d0f35eb56face8010"><td class="memItemLeft" align="right" valign="top"><a id="ga7bd2527dbe25037d0f35eb56face8010"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><b>bg_aff_shearx</b> (<a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> hx)</td></tr>
<tr class="separator:ga7bd2527dbe25037d0f35eb56face8010"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0a0bf192e25e13d578cddeaa03c5fdc3"><td class="memItemLeft" align="right" valign="top"><a id="ga0a0bf192e25e13d578cddeaa03c5fdc3"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><b>bg_aff_sheary</b> (<a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> hy)</td></tr>
<tr class="separator:ga0a0bf192e25e13d578cddeaa03c5fdc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4a79fb8a1941001c5de00c5241453a8d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoBg.htm#ga4a79fb8a1941001c5de00c5241453a8d">bg_aff_rotate</a> (<a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, u16 alpha)</td></tr>
<tr class="memdesc:ga4a79fb8a1941001c5de00c5241453a8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set bg matrix to counter-clockwise rotation.  <a href="#ga4a79fb8a1941001c5de00c5241453a8d">More...</a><br /></td></tr>
<tr class="separator:ga4a79fb8a1941001c5de00c5241453a8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab0d48ace0799a3c64c30ec38be40b764"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoBg.htm#gab0d48ace0799a3c64c30ec38be40b764">bg_aff_rotscale</a> (<a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, int sx, int sy, u16 alpha)</td></tr>
<tr class="memdesc:gab0d48ace0799a3c64c30ec38be40b764"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set bg matrix to 2d scaling, then counter-clockwise rotation.  <a href="#gab0d48ace0799a3c64c30ec38be40b764">More...</a><br /></td></tr>
<tr class="separator:gab0d48ace0799a3c64c30ec38be40b764"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga49bdf87a8a29679abd1ffcaf06ff9abc"><td class="memItemLeft" align="right" valign="top"><a id="ga49bdf87a8a29679abd1ffcaf06ff9abc"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoBg.htm#ga49bdf87a8a29679abd1ffcaf06ff9abc">bg_aff_premul</a> (<a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *dst, const <a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *src)</td></tr>
<tr class="memdesc:ga49bdf87a8a29679abd1ffcaf06ff9abc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pre-multiply <em>dst</em> by <em>src:</em> D = S*D. <br /></td></tr>
<tr class="separator:ga49bdf87a8a29679abd1ffcaf06ff9abc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaba4d91096bf483cc408ed96419232dcd"><td class="memItemLeft" align="right" valign="top"><a id="gaba4d91096bf483cc408ed96419232dcd"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoBg.htm#gaba4d91096bf483cc408ed96419232dcd">bg_aff_postmul</a> (<a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *dst, const <a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *src)</td></tr>
<tr class="memdesc:gaba4d91096bf483cc408ed96419232dcd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Post-multiply <em>dst</em> by <em>src:</em> D= D*S. <br /></td></tr>
<tr class="separator:gaba4d91096bf483cc408ed96419232dcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga783336f60bac5301fbda41b4ab856a04"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoBg.htm#ga783336f60bac5301fbda41b4ab856a04">bg_aff_rotscale2</a> (<a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, const <a class="el" href="structAFF__SRC.htm">AFF_SRC</a> *as)</td></tr>
<tr class="memdesc:ga783336f60bac5301fbda41b4ab856a04"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set bg matrix to 2d scaling, then counter-clockwise rotation.  <a href="#ga783336f60bac5301fbda41b4ab856a04">More...</a><br /></td></tr>
<tr class="separator:ga783336f60bac5301fbda41b4ab856a04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga883bad93b65ed70e331f91b191f67a92"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoBg.htm#ga883bad93b65ed70e331f91b191f67a92">bg_rotscale_ex</a> (<a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, const <a class="el" href="structAFF__SRC__EX.htm">AFF_SRC_EX</a> *asx)</td></tr>
<tr class="memdesc:ga883bad93b65ed70e331f91b191f67a92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set bg affine matrix to a rot/scale around an arbitrary point.  <a href="#ga883bad93b65ed70e331f91b191f67a92">More...</a><br /></td></tr>
<tr class="separator:ga883bad93b65ed70e331f91b191f67a92"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga4a79fb8a1941001c5de00c5241453a8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4a79fb8a1941001c5de00c5241453a8d">&#9670;&nbsp;</a></span>bg_aff_rotate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bg_aff_rotate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *&#160;</td>
          <td class="paramname"><em>bgaff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&#160;</td>
          <td class="paramname"><em>alpha</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set bg matrix to counter-clockwise rotation. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bgaff</td><td>Object affine struct to set. </td></tr>
    <tr><td class="paramname">alpha</td><td>CCW angle. full-circle is 10000h. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="el" href="group__grpMathLut.htm#ga38901aa521c8151a3014bb5d21511871">lu_cos()</a>, and <a class="el" href="group__grpMathLut.htm#gaaa900d8411737355a2b39862ebf394d1">lu_sin()</a>.</p>

</div>
</div>
<a id="gab0d48ace0799a3c64c30ec38be40b764"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab0d48ace0799a3c64c30ec38be40b764">&#9670;&nbsp;</a></span>bg_aff_rotscale()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bg_aff_rotscale </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *&#160;</td>
          <td class="paramname"><em>bgaff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&#160;</td>
          <td class="paramname"><em>alpha</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set bg matrix to 2d scaling, then counter-clockwise rotation. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bgaff</td><td>Object affine struct to set. </td></tr>
    <tr><td class="paramname">sx</td><td>Horizontal scale (zoom). .8 fixed point. </td></tr>
    <tr><td class="paramname">sy</td><td>Vertical scale (zoom). .8 fixed point. </td></tr>
    <tr><td class="paramname">alpha</td><td>CCW angle. full-circle is 10000h. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="el" href="group__grpMathLut.htm#ga38901aa521c8151a3014bb5d21511871">lu_cos()</a>, and <a class="el" href="group__grpMathLut.htm#gaaa900d8411737355a2b39862ebf394d1">lu_sin()</a>.</p>

</div>
</div>
<a id="ga783336f60bac5301fbda41b4ab856a04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga783336f60bac5301fbda41b4ab856a04">&#9670;&nbsp;</a></span>bg_aff_rotscale2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bg_aff_rotscale2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *&#160;</td>
          <td class="paramname"><em>bgaff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structAFF__SRC.htm">AFF_SRC</a> *&#160;</td>
          <td class="paramname"><em>as</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set bg matrix to 2d scaling, then counter-clockwise rotation. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bgaff</td><td>Object affine struct to set. </td></tr>
    <tr><td class="paramname">as</td><td>Struct with scales and angle. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="el" href="structAFF__SRC.htm#aed328e637ac31dc21dd65a0be4ac22b3">AFF_SRC::alpha</a>, <a class="el" href="group__grpMathLut.htm#ga38901aa521c8151a3014bb5d21511871">lu_cos()</a>, <a class="el" href="group__grpMathLut.htm#gaaa900d8411737355a2b39862ebf394d1">lu_sin()</a>, <a class="el" href="structAFF__SRC.htm#a204c9f9e123c24d2712a7a1eb2b2edf4">AFF_SRC::sx</a>, and <a class="el" href="structAFF__SRC.htm#a87019a83f7b2e135aa7e69d5966619f4">AFF_SRC::sy</a>.</p>

</div>
</div>
<a id="ga883bad93b65ed70e331f91b191f67a92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga883bad93b65ed70e331f91b191f67a92">&#9670;&nbsp;</a></span>bg_rotscale_ex()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bg_rotscale_ex </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__grpTypeTert.htm#gabd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *&#160;</td>
          <td class="paramname"><em>bgaff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structAFF__SRC__EX.htm">AFF_SRC_EX</a> *&#160;</td>
          <td class="paramname"><em>asx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set bg affine matrix to a rot/scale around an arbitrary point. </p>
<p>Rotate and scale round an arbitrary point using the <em>asx</em> data. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bgaff</td><td>BG affine data to set. </td></tr>
    <tr><td class="paramname">asx</td><td>Affine source data: screen and texture origins, scales and angle. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="el" href="structAFF__SRC__EX.htm#a0013aa65be960be765def0d16a723060">AFF_SRC_EX::alpha</a>, <a class="el" href="group__grpMathLut.htm#ga38901aa521c8151a3014bb5d21511871">lu_cos()</a>, <a class="el" href="group__grpMathLut.htm#gaaa900d8411737355a2b39862ebf394d1">lu_sin()</a>, <a class="el" href="structAFF__SRC__EX.htm#a063a32cd6e47a244c4628bc8d19285f8">AFF_SRC_EX::scr_x</a>, <a class="el" href="structAFF__SRC__EX.htm#a06b75f8ff5940677e81a98b457dc5778">AFF_SRC_EX::scr_y</a>, <a class="el" href="structAFF__SRC__EX.htm#a498e08da4f4e5efb144e6036788e210d">AFF_SRC_EX::sx</a>, <a class="el" href="structAFF__SRC__EX.htm#a83f4b100fe0d090a156a29fff6182c40">AFF_SRC_EX::sy</a>, <a class="el" href="structAFF__SRC__EX.htm#a2b8058a70c4f979e3949ee72558a51d8">AFF_SRC_EX::tex_x</a>, and <a class="el" href="structAFF__SRC__EX.htm#a69a0a9672466470c6b133b0a4a1bd995">AFF_SRC_EX::tex_y</a>.</p>

</div>
</div>
<a id="ga9a4d24635820ee7459e7efa5911067bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9a4d24635820ee7459e7efa5911067bb">&#9670;&nbsp;</a></span>se_window()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void se_window </td>
          <td>(</td>
          <td class="paramtype">SCR_ENTRY *&#160;</td>
          <td class="paramname"><em>sbb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>top</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>right</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>bottom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SCR_ENTRY&#160;</td>
          <td class="paramname"><em>se0</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a framed rectangle. </p>
<p>In contrast to <a class="el" href="group__grpVideoBg.htm#ga21d0366fa0f3a0a287e1e193f931200a" title="Create a border on sbb with se. ">se_frame()</a>, se_frame_ex() uses nine tiles starting at <em>se0</em> for the frame, which indicate the borders and center for the window. </p><dl class="section note"><dt>Note</dt><dd>Rectangle is nor normalized. </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
