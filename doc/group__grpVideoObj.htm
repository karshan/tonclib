<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>libtonc: Objects</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">libtonc
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Objects<div class="ingroups"><a class="el" href="group__grpVideo.htm">Video</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga9b4f8915dab23e4832b47bcb65a28d21"><td class="memItemLeft" align="right" valign="top"><a id="ga9b4f8915dab23e4832b47bcb65a28d21"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>OAM_CLEAR</b>()&#160;&#160;&#160;<a class="el" href="group__grpData.htm#ga79b00ab4b4cab447be9fed3b14e7fdfa">memset32</a>(<a class="el" href="group__grpMemArray.htm#ga83ae09123515d0d5d781637d5e5e5d97">oam_mem</a>, 0, OAM_SIZE/4)</td></tr>
<tr class="separator:ga9b4f8915dab23e4832b47bcb65a28d21"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga6182ac67d6aa29c635ac4bba1fa325a5"><td class="memItemLeft" align="right" valign="top"><a id="ga6182ac67d6aa29c635ac4bba1fa325a5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#ga6182ac67d6aa29c635ac4bba1fa325a5">oam_init</a> (<a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj, uint count)</td></tr>
<tr class="memdesc:ga6182ac67d6aa29c635ac4bba1fa325a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize an array of <em>count</em> OBJ_ATTRs with with safe values. <br /></td></tr>
<tr class="separator:ga6182ac67d6aa29c635ac4bba1fa325a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga29e55bb94a10cfea29b972d3fd4c9db9"><td class="memItemLeft" align="right" valign="top"><a id="ga29e55bb94a10cfea29b972d3fd4c9db9"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#ga29e55bb94a10cfea29b972d3fd4c9db9">oam_copy</a> (<a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *dst, const <a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *src, uint count)</td></tr>
<tr class="memdesc:ga29e55bb94a10cfea29b972d3fd4c9db9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies <em>count</em> OAM entries from <em>src</em> to <em>dst</em>. <br /></td></tr>
<tr class="separator:ga29e55bb94a10cfea29b972d3fd4c9db9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga51c6d393e7c5bc062859d8be93756113"><td class="memItemLeft" align="right" valign="top"><a id="ga51c6d393e7c5bc062859d8be93756113"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> <a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#ga51c6d393e7c5bc062859d8be93756113">obj_set_attr</a> (<a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj, u16 a0, u16 a1, u16 a2)</td></tr>
<tr class="memdesc:ga51c6d393e7c5bc062859d8be93756113"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the attributes of an object. <br /></td></tr>
<tr class="separator:ga51c6d393e7c5bc062859d8be93756113"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaab90a8a38ad5d98cf357317ded9add54"><td class="memItemLeft" align="right" valign="top"><a id="gaab90a8a38ad5d98cf357317ded9add54"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#gaab90a8a38ad5d98cf357317ded9add54">obj_set_pos</a> (<a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj, int x, int y)</td></tr>
<tr class="memdesc:gaab90a8a38ad5d98cf357317ded9add54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the position of <em>obj</em>. <br /></td></tr>
<tr class="separator:gaab90a8a38ad5d98cf357317ded9add54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga038b695f3c40e7c88853143c853dbddb"><td class="memItemLeft" align="right" valign="top"><a id="ga038b695f3c40e7c88853143c853dbddb"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#ga038b695f3c40e7c88853143c853dbddb">obj_hide</a> (<a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj)</td></tr>
<tr class="memdesc:ga038b695f3c40e7c88853143c853dbddb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Hide an object. <br /></td></tr>
<tr class="separator:ga038b695f3c40e7c88853143c853dbddb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0fb3d3b3e25e31813c8b9a938148d2c9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#ga0fb3d3b3e25e31813c8b9a938148d2c9">obj_unhide</a> (<a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj, u16 mode)</td></tr>
<tr class="memdesc:ga0fb3d3b3e25e31813c8b9a938148d2c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unhide an object.  <a href="#ga0fb3d3b3e25e31813c8b9a938148d2c9">More...</a><br /></td></tr>
<tr class="separator:ga0fb3d3b3e25e31813c8b9a938148d2c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabe98121a94d1ef16d2ec491f1a5a8bae"><td class="memItemLeft" align="right" valign="top"><a id="gabe98121a94d1ef16d2ec491f1a5a8bae"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> const u8 *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#gabe98121a94d1ef16d2ec491f1a5a8bae">obj_get_size</a> (const <a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj)</td></tr>
<tr class="memdesc:gabe98121a94d1ef16d2ec491f1a5a8bae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get object's sizes as a byte array. <br /></td></tr>
<tr class="separator:gabe98121a94d1ef16d2ec491f1a5a8bae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaab2576c05e8eb3434c063d0230cf6bb3"><td class="memItemLeft" align="right" valign="top"><a id="gaab2576c05e8eb3434c063d0230cf6bb3"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#gaab2576c05e8eb3434c063d0230cf6bb3">obj_get_width</a> (const <a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj)</td></tr>
<tr class="memdesc:gaab2576c05e8eb3434c063d0230cf6bb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get object's width. <br /></td></tr>
<tr class="separator:gaab2576c05e8eb3434c063d0230cf6bb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabddaacb6fd1247dc27c60bb4824892eb"><td class="memItemLeft" align="right" valign="top"><a id="gabddaacb6fd1247dc27c60bb4824892eb"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#gabddaacb6fd1247dc27c60bb4824892eb">obj_get_height</a> (const <a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj)</td></tr>
<tr class="memdesc:gabddaacb6fd1247dc27c60bb4824892eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets object's height. <br /></td></tr>
<tr class="separator:gabddaacb6fd1247dc27c60bb4824892eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab8199880ac37332813c73b79d20e04e5"><td class="memItemLeft" align="right" valign="top"><a id="gab8199880ac37332813c73b79d20e04e5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#gab8199880ac37332813c73b79d20e04e5">obj_copy</a> (<a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *dst, const <a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *src, uint count)</td></tr>
<tr class="memdesc:gab8199880ac37332813c73b79d20e04e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy attributes 0-2 in <em>count</em> OBJ_ATTRs. <br /></td></tr>
<tr class="separator:gab8199880ac37332813c73b79d20e04e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad48ba7c4edda28016e24fce29d045034"><td class="memItemLeft" align="right" valign="top"><a id="gad48ba7c4edda28016e24fce29d045034"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#gad48ba7c4edda28016e24fce29d045034">obj_hide_multi</a> (<a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj, u32 count)</td></tr>
<tr class="memdesc:gad48ba7c4edda28016e24fce29d045034"><td class="mdescLeft">&#160;</td><td class="mdescRight">Hide an array of OBJ_ATTRs. <br /></td></tr>
<tr class="separator:gad48ba7c4edda28016e24fce29d045034"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2668178e7062320d719699210d6df288"><td class="memItemLeft" align="right" valign="top"><a id="ga2668178e7062320d719699210d6df288"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>obj_unhide_multi</b> (<a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj, u16 mode, uint count)</td></tr>
<tr class="separator:ga2668178e7062320d719699210d6df288"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa6ee3b6244930492792f9931af292d36"><td class="memItemLeft" align="right" valign="top"><a id="gaa6ee3b6244930492792f9931af292d36"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>obj_aff_copy</b> (<a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *dst, const <a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *src, uint count)</td></tr>
<tr class="separator:gaa6ee3b6244930492792f9931af292d36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d4892b1bf8b86061377cbd4ce0ca409"><td class="memItemLeft" align="right" valign="top"><a id="ga1d4892b1bf8b86061377cbd4ce0ca409"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#ga1d4892b1bf8b86061377cbd4ce0ca409">obj_aff_set</a> (<a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pa, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pb, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pc, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pd)</td></tr>
<tr class="memdesc:ga1d4892b1bf8b86061377cbd4ce0ca409"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the elements of an <em>object</em> affine matrix. <br /></td></tr>
<tr class="separator:ga1d4892b1bf8b86061377cbd4ce0ca409"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga46a81c2bdcd764102f692dca7270998b"><td class="memItemLeft" align="right" valign="top"><a id="ga46a81c2bdcd764102f692dca7270998b"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#ga46a81c2bdcd764102f692dca7270998b">obj_aff_identity</a> (<a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff)</td></tr>
<tr class="memdesc:ga46a81c2bdcd764102f692dca7270998b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set an object affine matrix to the identity matrix. <br /></td></tr>
<tr class="separator:ga46a81c2bdcd764102f692dca7270998b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae324246531d60cc99f356ba7071a7cf9"><td class="memItemLeft" align="right" valign="top"><a id="gae324246531d60cc99f356ba7071a7cf9"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#gae324246531d60cc99f356ba7071a7cf9">obj_aff_scale</a> (<a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> sx, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> sy)</td></tr>
<tr class="memdesc:gae324246531d60cc99f356ba7071a7cf9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set an object affine matrix for scaling. <br /></td></tr>
<tr class="separator:gae324246531d60cc99f356ba7071a7cf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7c2da38f7806d772b7be3a707d54c4c4"><td class="memItemLeft" align="right" valign="top"><a id="ga7c2da38f7806d772b7be3a707d54c4c4"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><b>obj_aff_shearx</b> (<a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> hx)</td></tr>
<tr class="separator:ga7c2da38f7806d772b7be3a707d54c4c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab2cc4f52bf0b7b88acd97824e0516f24"><td class="memItemLeft" align="right" valign="top"><a id="gab2cc4f52bf0b7b88acd97824e0516f24"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><b>obj_aff_sheary</b> (<a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> hy)</td></tr>
<tr class="separator:gab2cc4f52bf0b7b88acd97824e0516f24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8467b98c70455c369b883833c302a156"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#ga8467b98c70455c369b883833c302a156">obj_aff_rotate</a> (<a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff, u16 alpha)</td></tr>
<tr class="memdesc:ga8467b98c70455c369b883833c302a156"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set obj matrix to counter-clockwise rotation.  <a href="#ga8467b98c70455c369b883833c302a156">More...</a><br /></td></tr>
<tr class="separator:ga8467b98c70455c369b883833c302a156"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1324a8f528a2dee81b357c63e6c822bc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#ga1324a8f528a2dee81b357c63e6c822bc">obj_aff_rotscale</a> (<a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> sx, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> sy, u16 alpha)</td></tr>
<tr class="memdesc:ga1324a8f528a2dee81b357c63e6c822bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set obj matrix to 2d scaling, then counter-clockwise rotation.  <a href="#ga1324a8f528a2dee81b357c63e6c822bc">More...</a><br /></td></tr>
<tr class="separator:ga1324a8f528a2dee81b357c63e6c822bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafdc2e9dac960cb679561e1ff4fcc934a"><td class="memItemLeft" align="right" valign="top"><a id="gafdc2e9dac960cb679561e1ff4fcc934a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#gafdc2e9dac960cb679561e1ff4fcc934a">obj_aff_premul</a> (<a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *dst, const <a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *src)</td></tr>
<tr class="memdesc:gafdc2e9dac960cb679561e1ff4fcc934a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pre-multiply <em>dst</em> by <em>src:</em> D = S*D. <br /></td></tr>
<tr class="separator:gafdc2e9dac960cb679561e1ff4fcc934a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8b30512833f0b99ccd49db914113ce68"><td class="memItemLeft" align="right" valign="top"><a id="ga8b30512833f0b99ccd49db914113ce68"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#ga8b30512833f0b99ccd49db914113ce68">obj_aff_postmul</a> (<a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *dst, const <a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *src)</td></tr>
<tr class="memdesc:ga8b30512833f0b99ccd49db914113ce68"><td class="mdescLeft">&#160;</td><td class="mdescRight">Post-multiply <em>dst</em> by <em>src:</em> D= D*S. <br /></td></tr>
<tr class="separator:ga8b30512833f0b99ccd49db914113ce68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabca7ad22d23b0618adfeea1fac0d71b2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#gabca7ad22d23b0618adfeea1fac0d71b2">obj_aff_rotscale2</a> (<a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff, const <a class="el" href="structAFF__SRC.htm">AFF_SRC</a> *as)</td></tr>
<tr class="memdesc:gabca7ad22d23b0618adfeea1fac0d71b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set obj matrix to 2d scaling, then counter-clockwise rotation.  <a href="#gabca7ad22d23b0618adfeea1fac0d71b2">More...</a><br /></td></tr>
<tr class="separator:gabca7ad22d23b0618adfeea1fac0d71b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga415d7f22a2a7f144ad50b9cfe64bb162"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpVideoObj.htm#ga415d7f22a2a7f144ad50b9cfe64bb162">obj_rotscale_ex</a> (<a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj, <a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff, const <a class="el" href="structAFF__SRC__EX.htm">AFF_SRC_EX</a> *asx)</td></tr>
<tr class="memdesc:ga415d7f22a2a7f144ad50b9cfe64bb162"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rot/scale an object around an arbitrary point.  <a href="#ga415d7f22a2a7f144ad50b9cfe64bb162">More...</a><br /></td></tr>
<tr class="separator:ga415d7f22a2a7f144ad50b9cfe64bb162"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga99002ed8b528778525fa11a515dada3a"><td class="memItemLeft" align="right" valign="top"><a id="ga99002ed8b528778525fa11a515dada3a"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><b>obj_aff_scale_inv</b> (<a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oa, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> wx, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> wy)</td></tr>
<tr class="separator:ga99002ed8b528778525fa11a515dada3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf89f5d174aa617b8a48a77f7a5dd73fe"><td class="memItemLeft" align="right" valign="top"><a id="gaf89f5d174aa617b8a48a77f7a5dd73fe"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><b>obj_aff_rotate_inv</b> (<a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oa, u16 theta)</td></tr>
<tr class="separator:gaf89f5d174aa617b8a48a77f7a5dd73fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga501e50c9750d0f2fbf869bc9829ab95c"><td class="memItemLeft" align="right" valign="top"><a id="ga501e50c9750d0f2fbf869bc9829ab95c"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><b>obj_aff_shearx_inv</b> (<a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oa, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> hx)</td></tr>
<tr class="separator:ga501e50c9750d0f2fbf869bc9829ab95c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacdc7c85ee47064ea99206b0f95fe5650"><td class="memItemLeft" align="right" valign="top"><a id="gacdc7c85ee47064ea99206b0f95fe5650"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><b>obj_aff_sheary_inv</b> (<a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oa, <a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a> hy)</td></tr>
<tr class="separator:gacdc7c85ee47064ea99206b0f95fe5650"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga8467b98c70455c369b883833c302a156"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8467b98c70455c369b883833c302a156">&#9670;&nbsp;</a></span>obj_aff_rotate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void obj_aff_rotate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *&#160;</td>
          <td class="paramname"><em>oaff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&#160;</td>
          <td class="paramname"><em>alpha</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set obj matrix to counter-clockwise rotation. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">oaff</td><td>Object affine struct to set. </td></tr>
    <tr><td class="paramname">alpha</td><td>CCW angle. full-circle is 10000h. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="el" href="group__grpMathLut.htm#ga38901aa521c8151a3014bb5d21511871">lu_cos()</a>, and <a class="el" href="group__grpMathLut.htm#gaaa900d8411737355a2b39862ebf394d1">lu_sin()</a>.</p>

</div>
</div>
<a id="ga1324a8f528a2dee81b357c63e6c822bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1324a8f528a2dee81b357c63e6c822bc">&#9670;&nbsp;</a></span>obj_aff_rotscale()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void obj_aff_rotscale </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *&#160;</td>
          <td class="paramname"><em>oaff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a>&#160;</td>
          <td class="paramname"><em>sx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__grpTypeSec.htm#ga774d105a82ba25e836aa6b6d78cd1203">FIXED</a>&#160;</td>
          <td class="paramname"><em>sy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&#160;</td>
          <td class="paramname"><em>alpha</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set obj matrix to 2d scaling, then counter-clockwise rotation. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">oaff</td><td>Object affine struct to set. </td></tr>
    <tr><td class="paramname">sx</td><td>Horizontal scale (zoom). .8 fixed point. </td></tr>
    <tr><td class="paramname">sy</td><td>Vertical scale (zoom). .8 fixed point. </td></tr>
    <tr><td class="paramname">alpha</td><td>CCW angle. full-circle is 10000h. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="el" href="group__grpMathLut.htm#ga38901aa521c8151a3014bb5d21511871">lu_cos()</a>, and <a class="el" href="group__grpMathLut.htm#gaaa900d8411737355a2b39862ebf394d1">lu_sin()</a>.</p>

</div>
</div>
<a id="gabca7ad22d23b0618adfeea1fac0d71b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabca7ad22d23b0618adfeea1fac0d71b2">&#9670;&nbsp;</a></span>obj_aff_rotscale2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void obj_aff_rotscale2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *&#160;</td>
          <td class="paramname"><em>oaff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structAFF__SRC.htm">AFF_SRC</a> *&#160;</td>
          <td class="paramname"><em>as</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set obj matrix to 2d scaling, then counter-clockwise rotation. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">oaff</td><td>Object affine struct to set. </td></tr>
    <tr><td class="paramname">as</td><td>Struct with scales and angle. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="el" href="structAFF__SRC.htm#aed328e637ac31dc21dd65a0be4ac22b3">AFF_SRC::alpha</a>, <a class="el" href="group__grpMathLut.htm#ga38901aa521c8151a3014bb5d21511871">lu_cos()</a>, <a class="el" href="group__grpMathLut.htm#gaaa900d8411737355a2b39862ebf394d1">lu_sin()</a>, <a class="el" href="structAFF__SRC.htm#a204c9f9e123c24d2712a7a1eb2b2edf4">AFF_SRC::sx</a>, and <a class="el" href="structAFF__SRC.htm#a87019a83f7b2e135aa7e69d5966619f4">AFF_SRC::sy</a>.</p>

</div>
</div>
<a id="ga415d7f22a2a7f144ad50b9cfe64bb162"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga415d7f22a2a7f144ad50b9cfe64bb162">&#9670;&nbsp;</a></span>obj_rotscale_ex()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void obj_rotscale_ex </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *&#160;</td>
          <td class="paramname"><em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *&#160;</td>
          <td class="paramname"><em>oaff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structAFF__SRC__EX.htm">AFF_SRC_EX</a> *&#160;</td>
          <td class="paramname"><em>asx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Rot/scale an object around an arbitrary point. </p>
<p>Sets up <em>obj</em> <em>and</em> <em>oaff</em> for rot/scale transformation around an arbitrary point using the <em>asx</em> data. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">obj</td><td>Object to set. </td></tr>
    <tr><td class="paramname">oaff</td><td>Object affine data to set. </td></tr>
    <tr><td class="paramname">asx</td><td>Affine source data: screen and texture origins, scales and angle. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="el" href="structAFF__SRC__EX.htm#a0013aa65be960be765def0d16a723060">AFF_SRC_EX::alpha</a>, <a class="el" href="group__grpBiosMain.htm#ga56e2dea01a1b14ac08f1d84b7148868e">Div()</a>, <a class="el" href="group__grpMathLut.htm#ga38901aa521c8151a3014bb5d21511871">lu_cos()</a>, <a class="el" href="group__grpMathLut.htm#gaaa900d8411737355a2b39862ebf394d1">lu_sin()</a>, <a class="el" href="structAFF__SRC__EX.htm#a498e08da4f4e5efb144e6036788e210d">AFF_SRC_EX::sx</a>, and <a class="el" href="structAFF__SRC__EX.htm#a83f4b100fe0d090a156a29fff6182c40">AFF_SRC_EX::sy</a>.</p>

</div>
</div>
<a id="ga0fb3d3b3e25e31813c8b9a938148d2c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0fb3d3b3e25e31813c8b9a938148d2c9">&#9670;&nbsp;</a></span>obj_unhide()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void obj_unhide </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *&#160;</td>
          <td class="paramname"><em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&#160;</td>
          <td class="paramname"><em>mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unhide an object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">obj</td><td>Object to unhide. </td></tr>
    <tr><td class="paramname">mode</td><td>Object mode to unhide to. Necessary because this affects the affine-ness of the object. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="el" href="group__grpCoreBit.htm#ga04c777d63f2aadbc80cc9c528a3a36a5">BFN_SET2</a>.</p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
