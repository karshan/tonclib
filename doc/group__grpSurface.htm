<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>libtonc: Surface functions</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">libtonc
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#groups">Modules</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Surface functions<div class="ingroups"><a class="el" href="group__grpVideo.htm">Video</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic video surface API. The TSurface struct and the various functions working on it provide a basic API for working with different types of graphic surfaces, like 16bpp bitmaps, 8bpp bitmaps, but also tiled surfaces.<br />
  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="groups"></a>
Modules</h2></td></tr>
<tr class="memitem:group__grpSbmp16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm">16bpp bitmap surfaces</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__grpSbmp8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm">8bpp bitmap surfaces</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__grpSchr4c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4c.htm">4bpp tiled surfaces, column major</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__grpSchr4r"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSchr4r.htm">4bpp tiled surfaces, row major</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga90dc42181b432962e19973610ef36883"><td class="memItemLeft" align="right" valign="top"><a id="ga90dc42181b432962e19973610ef36883"></a>
typedef enum <a class="el" href="group__grpSurface.htm#ga648b4661eb1ae22c943458db7b02d612">ESurfaceType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#ga90dc42181b432962e19973610ef36883">ESurfaceType</a></td></tr>
<tr class="memdesc:ga90dc42181b432962e19973610ef36883"><td class="mdescLeft">&#160;</td><td class="mdescRight">Surface types. <br /></td></tr>
<tr class="separator:ga90dc42181b432962e19973610ef36883"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3a85e20c7eed0485c940d682d4ad287d"><td class="memItemLeft" align="right" valign="top"><a id="ga3a85e20c7eed0485c940d682d4ad287d"></a>
typedef struct TSurface&#160;</td><td class="memItemRight" valign="bottom"><b>TSurface</b></td></tr>
<tr class="separator:ga3a85e20c7eed0485c940d682d4ad287d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga648b4661eb1ae22c943458db7b02d612"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#ga648b4661eb1ae22c943458db7b02d612">ESurfaceType</a> { <br />
&#160;&#160;<a class="el" href="group__grpSurface.htm#gga648b4661eb1ae22c943458db7b02d612a9cfea2dfceebe372f6d23195679e1cc5">SRF_NONE</a> =0, 
<a class="el" href="group__grpSurface.htm#gga648b4661eb1ae22c943458db7b02d612ac00ef437c87c2167b275a32768348521">SRF_BMP16</a> =1, 
<a class="el" href="group__grpSurface.htm#gga648b4661eb1ae22c943458db7b02d612a6b2e22bb3f91e54e24bd31f7a8a50228">SRF_BMP8</a> =2, 
<a class="el" href="group__grpSurface.htm#gga648b4661eb1ae22c943458db7b02d612a7f2c2b1ce67b72e20f6ea35b713efdeb">SRF_CHR4R</a> =4, 
<br />
&#160;&#160;<a class="el" href="group__grpSurface.htm#gga648b4661eb1ae22c943458db7b02d612a90a348dc887ca488cc0aa18636453264">SRF_CHR4C</a> =5, 
<a class="el" href="group__grpSurface.htm#gga648b4661eb1ae22c943458db7b02d612a4bcdaca2be2f8ac6e0a0d46dba406418">SRF_CHR8</a> =6, 
<a class="el" href="group__grpSurface.htm#gga648b4661eb1ae22c943458db7b02d612a73730c997fbaa327d3dd53a4c96c394d">SRF_ALLOCATED</a> = 0x80
<br />
 }<tr class="memdesc:ga648b4661eb1ae22c943458db7b02d612"><td class="mdescLeft">&#160;</td><td class="mdescRight">Surface types.  <a href="group__grpSurface.htm#ga648b4661eb1ae22c943458db7b02d612">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:ga648b4661eb1ae22c943458db7b02d612"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga775c5181aba0087cb2c0133ea8d3885c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#ga775c5181aba0087cb2c0133ea8d3885c">srf_init</a> (TSurface *srf, enum <a class="el" href="group__grpSurface.htm#ga648b4661eb1ae22c943458db7b02d612">ESurfaceType</a> type, const void *data, uint width, uint height, uint bpp, u16 *pal)</td></tr>
<tr class="memdesc:ga775c5181aba0087cb2c0133ea8d3885c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initalize a surface for <em>type</em> formatted graphics.  <a href="#ga775c5181aba0087cb2c0133ea8d3885c">More...</a><br /></td></tr>
<tr class="separator:ga775c5181aba0087cb2c0133ea8d3885c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga205bd8b3723b66b0e2d685170647581f"><td class="memItemLeft" align="right" valign="top"><a id="ga205bd8b3723b66b0e2d685170647581f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#ga205bd8b3723b66b0e2d685170647581f">srf_pal_copy</a> (const TSurface *dst, const TSurface *src, uint count)</td></tr>
<tr class="memdesc:ga205bd8b3723b66b0e2d685170647581f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy <em>count</em> colors from <em>src's</em> palette to <em>dst's</em> palette. <br /></td></tr>
<tr class="separator:ga205bd8b3723b66b0e2d685170647581f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8d01b2f0135320e7b13847bbfd36c2c2"><td class="memItemLeft" align="right" valign="top"><a id="ga8d01b2f0135320e7b13847bbfd36c2c2"></a>
void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#ga8d01b2f0135320e7b13847bbfd36c2c2">srf_get_ptr</a> (const TSurface *srf, uint x, uint y)</td></tr>
<tr class="memdesc:ga8d01b2f0135320e7b13847bbfd36c2c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the byte address of coordinates (<em>x</em>, <em>y</em>) on the surface. <br /></td></tr>
<tr class="separator:ga8d01b2f0135320e7b13847bbfd36c2c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9be7f9468dbdbfe2fbfae56363b1e4c4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> uint&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#ga9be7f9468dbdbfe2fbfae56363b1e4c4">srf_align</a> (uint width, uint bpp)</td></tr>
<tr class="memdesc:ga9be7f9468dbdbfe2fbfae56363b1e4c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the word-aligned number of bytes for a scanline.  <a href="#ga9be7f9468dbdbfe2fbfae56363b1e4c4">More...</a><br /></td></tr>
<tr class="separator:ga9be7f9468dbdbfe2fbfae56363b1e4c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga15e841431780f7d4c0734a295cc829bf"><td class="memItemLeft" align="right" valign="top"><a id="ga15e841431780f7d4c0734a295cc829bf"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#ga15e841431780f7d4c0734a295cc829bf">srf_set_ptr</a> (TSurface *srf, const void *ptr)</td></tr>
<tr class="memdesc:ga15e841431780f7d4c0734a295cc829bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set Data-pointer surface for <em>srf</em>. <br /></td></tr>
<tr class="separator:ga15e841431780f7d4c0734a295cc829bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa69f8dde433ca79b2df78df758934888"><td class="memItemLeft" align="right" valign="top"><a id="gaa69f8dde433ca79b2df78df758934888"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#gaa69f8dde433ca79b2df78df758934888">srf_set_pal</a> (TSurface *srf, const u16 *pal, uint size)</td></tr>
<tr class="memdesc:gaa69f8dde433ca79b2df78df758934888"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the palette pointer and its size. <br /></td></tr>
<tr class="separator:gaa69f8dde433ca79b2df78df758934888"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7516c4c9589261da8ab65cdfef5b5999"><td class="memItemLeft" align="right" valign="top"><a id="ga7516c4c9589261da8ab65cdfef5b5999"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSurface.htm#ga7516c4c9589261da8ab65cdfef5b5999">_srf_get_ptr</a> (const TSurface *srf, uint x, uint y, uint stride)</td></tr>
<tr class="memdesc:ga7516c4c9589261da8ab65cdfef5b5999"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inline and semi-safe version of <a class="el" href="group__grpSurface.htm#ga8d01b2f0135320e7b13847bbfd36c2c2" title="Get the byte address of coordinates (x, y) on the surface. ">srf_get_ptr()</a>. Use with caution. <br /></td></tr>
<tr class="separator:ga7516c4c9589261da8ab65cdfef5b5999"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Basic video surface API. The TSurface struct and the various functions working on it provide a basic API for working with different types of graphic surfaces, like 16bpp bitmaps, 8bpp bitmaps, but also tiled surfaces.<br />
 </p>
<p>Tonclib's Surface system provides the basic functionality for drawing onto graphic surfaces of different types. This includes</p><ul>
<li><b>bmp16</b>: 16bpp bitmap surfaces</li>
<li><b>bmp8</b>: 8bpp bitmap surfaces.</li>
<li><b>chr4</b>(c/r): 4bpp tiled surfaces. This covers almost all of the GBA graphic modes.</li>
<li><b>SRF_BMP8</b>: 8bpp linear (Mode 4 / affine BGs)</li>
<li><b>SRF_BMP16</b> 16bpp bitmaps (Mode 3/5 / regular BGs to some extent)</li>
<li><b>SRF_CHR4C</b> 4bpp tiles, column-major (Regular tiled BG)</li>
<li><b>SRF_CHR4R</b> 4bpp tiles, row-major (Regular tiled BG, OBJs)</li>
</ul>
<p>For each of these functions exist for the most important drawing options: plotting, lines and rectangles. For BMP8/BMP16 and to some extent CHR4C, there are blitters as well. </p>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="ga648b4661eb1ae22c943458db7b02d612"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga648b4661eb1ae22c943458db7b02d612">&#9670;&nbsp;</a></span>ESurfaceType</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__grpSurface.htm#ga648b4661eb1ae22c943458db7b02d612">ESurfaceType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Surface types. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga648b4661eb1ae22c943458db7b02d612a9cfea2dfceebe372f6d23195679e1cc5"></a>SRF_NONE&#160;</td><td class="fielddoc"><p>No specific type. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga648b4661eb1ae22c943458db7b02d612ac00ef437c87c2167b275a32768348521"></a>SRF_BMP16&#160;</td><td class="fielddoc"><p>16bpp linear (bitmap/tilemap). </p>
</td></tr>
<tr><td class="fieldname"><a id="gga648b4661eb1ae22c943458db7b02d612a6b2e22bb3f91e54e24bd31f7a8a50228"></a>SRF_BMP8&#160;</td><td class="fielddoc"><p>8bpp linear (bitmap/tilemap). </p>
</td></tr>
<tr><td class="fieldname"><a id="gga648b4661eb1ae22c943458db7b02d612a7f2c2b1ce67b72e20f6ea35b713efdeb"></a>SRF_CHR4R&#160;</td><td class="fielddoc"><p>4bpp tiles, row-major. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga648b4661eb1ae22c943458db7b02d612a90a348dc887ca488cc0aa18636453264"></a>SRF_CHR4C&#160;</td><td class="fielddoc"><p>4bpp tiles, column-major. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga648b4661eb1ae22c943458db7b02d612a4bcdaca2be2f8ac6e0a0d46dba406418"></a>SRF_CHR8&#160;</td><td class="fielddoc"><p>8bpp tiles, row-major. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga648b4661eb1ae22c943458db7b02d612a73730c997fbaa327d3dd53a4c96c394d"></a>SRF_ALLOCATED&#160;</td><td class="fielddoc"><p>Pointers have been allocated. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga9be7f9468dbdbfe2fbfae56363b1e4c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9be7f9468dbdbfe2fbfae56363b1e4c4">&#9670;&nbsp;</a></span>srf_align()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> uint srf_align </td>
          <td>(</td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>bpp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the word-aligned number of bytes for a scanline. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">width</td><td>Number of pixels. </td></tr>
    <tr><td class="paramname">bpp</td><td>Bits per pixel. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga775c5181aba0087cb2c0133ea8d3885c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga775c5181aba0087cb2c0133ea8d3885c">&#9670;&nbsp;</a></span>srf_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void srf_init </td>
          <td>(</td>
          <td class="paramtype">TSurface *&#160;</td>
          <td class="paramname"><em>srf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="group__grpSurface.htm#ga648b4661eb1ae22c943458db7b02d612">ESurfaceType</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>bpp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16 *&#160;</td>
          <td class="paramname"><em>pal</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initalize a surface for <em>type</em> formatted graphics. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">srf</td><td>Surface to initialize. </td></tr>
    <tr><td class="paramname">type</td><td>Surface type. See </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__grpSurface.htm#ga90dc42181b432962e19973610ef36883" title="Surface types. ">ESurfaceType</a> for details. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>Pointer to the surface memory. </td></tr>
    <tr><td class="paramname">width</td><td>Width of surface. </td></tr>
    <tr><td class="paramname">height</td><td>Height of surface. </td></tr>
    <tr><td class="paramname">bpp</td><td>Bitdepth. If <em>type</em> is not 0, this value will be ignored. </td></tr>
    <tr><td class="paramname">pal</td><td>Pointer to the surface's palette. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
