<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>libtonc: 8bpp bitmap surfaces</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">libtonc
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">8bpp bitmap surfaces<div class="ingroups"><a class="el" href="group__grpVideo.htm">Video</a> &raquo; <a class="el" href="group__grpSurface.htm">Surface functions</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga7e2eb397e79cc7de9a8a20f40e48a9e3"><td class="memItemLeft" align="right" valign="top"><a id="ga7e2eb397e79cc7de9a8a20f40e48a9e3"></a>
u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#ga7e2eb397e79cc7de9a8a20f40e48a9e3">sbmp8_get_pixel</a> (const TSurface *src, int x, int y)</td></tr>
<tr class="memdesc:ga7e2eb397e79cc7de9a8a20f40e48a9e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pixel value of <em>src</em> at (<em>x</em>, <em>y</em>). <br /></td></tr>
<tr class="separator:ga7e2eb397e79cc7de9a8a20f40e48a9e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf11c57ccae4f6a4a8650022692201669"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#gaf11c57ccae4f6a4a8650022692201669">sbmp8_plot</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:gaf11c57ccae4f6a4a8650022692201669"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plot a single pixel on a 8-bit buffer.  <a href="#gaf11c57ccae4f6a4a8650022692201669">More...</a><br /></td></tr>
<tr class="separator:gaf11c57ccae4f6a4a8650022692201669"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad925a9c671471a067b8c3d2d6980f24f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#gad925a9c671471a067b8c3d2d6980f24f">sbmp8_hline</a> (const TSurface *dst, int x1, int y, int x2, u32 clr)</td></tr>
<tr class="memdesc:gad925a9c671471a067b8c3d2d6980f24f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a horizontal line on an 8-bit buffer.  <a href="#gad925a9c671471a067b8c3d2d6980f24f">More...</a><br /></td></tr>
<tr class="separator:gad925a9c671471a067b8c3d2d6980f24f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9fd7423775f60058ef567c822c760cd2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#ga9fd7423775f60058ef567c822c760cd2">sbmp8_vline</a> (const TSurface *dst, int x, int y1, int y2, u32 clr)</td></tr>
<tr class="memdesc:ga9fd7423775f60058ef567c822c760cd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a vertical line on an 8-bit buffer.  <a href="#ga9fd7423775f60058ef567c822c760cd2">More...</a><br /></td></tr>
<tr class="separator:ga9fd7423775f60058ef567c822c760cd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeac238b4fd79ad2daabdc98c818f62f7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#gaeac238b4fd79ad2daabdc98c818f62f7">sbmp8_line</a> (const TSurface *dst, int x1, int y1, int x2, int y2, u32 clr)</td></tr>
<tr class="memdesc:gaeac238b4fd79ad2daabdc98c818f62f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a line on an 8-bit buffer.  <a href="#gaeac238b4fd79ad2daabdc98c818f62f7">More...</a><br /></td></tr>
<tr class="separator:gaeac238b4fd79ad2daabdc98c818f62f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d3859acc074497a2a5f68f33c91093d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#ga1d3859acc074497a2a5f68f33c91093d">sbmp8_rect</a> (const TSurface *dst, int left, int top, int right, int bottom, u32 clr)</td></tr>
<tr class="memdesc:ga1d3859acc074497a2a5f68f33c91093d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a rectangle in 8-bit mode.  <a href="#ga1d3859acc074497a2a5f68f33c91093d">More...</a><br /></td></tr>
<tr class="separator:ga1d3859acc074497a2a5f68f33c91093d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1aa3f2e4aaffaf79011f9ee7b20452a7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#ga1aa3f2e4aaffaf79011f9ee7b20452a7">sbmp8_frame</a> (const TSurface *dst, int left, int top, int right, int bottom, u32 clr)</td></tr>
<tr class="memdesc:ga1aa3f2e4aaffaf79011f9ee7b20452a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a rectangle in 8-bit mode.  <a href="#ga1aa3f2e4aaffaf79011f9ee7b20452a7">More...</a><br /></td></tr>
<tr class="separator:ga1aa3f2e4aaffaf79011f9ee7b20452a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0af7716e3a985af84def73d5ce70726b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#ga0af7716e3a985af84def73d5ce70726b">sbmp8_blit</a> (const TSurface *dst, int dstX, int dstY, uint width, uint height, const TSurface *src, int srcX, int srcY)</td></tr>
<tr class="memdesc:ga0af7716e3a985af84def73d5ce70726b"><td class="mdescLeft">&#160;</td><td class="mdescRight">16bpp blitter. Copies a rectangle from one surface to another.  <a href="#ga0af7716e3a985af84def73d5ce70726b">More...</a><br /></td></tr>
<tr class="separator:ga0af7716e3a985af84def73d5ce70726b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4284de8744e5a6114733140f2123c241"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#ga4284de8744e5a6114733140f2123c241">sbmp8_floodfill</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:ga4284de8744e5a6114733140f2123c241"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floodfill an area of the same color with new color <em>clr</em>.  <a href="#ga4284de8744e5a6114733140f2123c241">More...</a><br /></td></tr>
<tr class="separator:ga4284de8744e5a6114733140f2123c241"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa962987eb1416b258982ffb3ba9549df"><td class="memItemLeft" align="right" valign="top"><a id="gaa962987eb1416b258982ffb3ba9549df"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#gaa962987eb1416b258982ffb3ba9549df">_sbmp8_plot</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:gaa962987eb1416b258982ffb3ba9549df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plot a single pixel on a 8-bit surface; inline version. <br /></td></tr>
<tr class="separator:gaa962987eb1416b258982ffb3ba9549df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0a6ffbd95edec61dd6f5d791d4bd4fde"><td class="memItemLeft" align="right" valign="top"><a id="ga0a6ffbd95edec61dd6f5d791d4bd4fde"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp8.htm#ga0a6ffbd95edec61dd6f5d791d4bd4fde">_sbmp8_get_pixel</a> (const TSurface *src, int x, int y)</td></tr>
<tr class="memdesc:ga0a6ffbd95edec61dd6f5d791d4bd4fde"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pixel value of <em>src</em> at (<em>x</em>, <em>y</em>); inline version. <br /></td></tr>
<tr class="separator:ga0a6ffbd95edec61dd6f5d791d4bd4fde"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Routines for 8bpp linear surfaces. For use in mode 4 and affine tilemaps. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga0af7716e3a985af84def73d5ce70726b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0af7716e3a985af84def73d5ce70726b">&#9670;&nbsp;</a></span>sbmp8_blit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sbmp8_blit </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dstX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dstY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>srcX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>srcY</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>16bpp blitter. Copies a rectangle from one surface to another. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">dstX</td><td>Left coord of rectangle on <em>dst</em>. </td></tr>
    <tr><td class="paramname">dstY</td><td>Top coord of rectangle on <em>dst</em>. </td></tr>
    <tr><td class="paramname">width</td><td>Width of rectangle to blit. </td></tr>
    <tr><td class="paramname">height</td><td>Height of rectangle to blit. </td></tr>
    <tr><td class="paramname">src</td><td>Source surface. </td></tr>
    <tr><td class="paramname">srcX</td><td>Left coord of rectangle on <em>src</em>. </td></tr>
    <tr><td class="paramname">srcY</td><td>Top coord of rectangle on <em>src</em>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>The rectangle will be clipped to both <em>src</em> and <em>dst</em>. </dd></dl>

</div>
</div>
<a id="ga4284de8744e5a6114733140f2123c241"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4284de8744e5a6114733140f2123c241">&#9670;&nbsp;</a></span>sbmp8_floodfill()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sbmp8_floodfill </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floodfill an area of the same color with new color <em>clr</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">x</td><td>X-coordinate. </td></tr>
    <tr><td class="paramname">y</td><td>Y-coordinate; </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga1aa3f2e4aaffaf79011f9ee7b20452a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1aa3f2e4aaffaf79011f9ee7b20452a7">&#9670;&nbsp;</a></span>sbmp8_frame()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sbmp8_frame </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>top</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>right</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>bottom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw a rectangle in 8-bit mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">left</td><td>Left side of rectangle; </td></tr>
    <tr><td class="paramname">top</td><td>Top side of rectangle. </td></tr>
    <tr><td class="paramname">right</td><td>Right side of rectangle. </td></tr>
    <tr><td class="paramname">bottom</td><td>Bottom side of rectangle. </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Does normalization, but not bounds checks. </dd>
<dd>
PONDER: RB in- or exclusive? </dd></dl>

</div>
</div>
<a id="gad925a9c671471a067b8c3d2d6980f24f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad925a9c671471a067b8c3d2d6980f24f">&#9670;&nbsp;</a></span>sbmp8_hline()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sbmp8_hline </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw a horizontal line on an 8-bit buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">x1</td><td>First X-coord. </td></tr>
    <tr><td class="paramname">y</td><td>Y-coord. </td></tr>
    <tr><td class="paramname">x2</td><td>Second X-coord. </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Does normalization, but not bounds checks. </dd></dl>

</div>
</div>
<a id="gaeac238b4fd79ad2daabdc98c818f62f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaeac238b4fd79ad2daabdc98c818f62f7">&#9670;&nbsp;</a></span>sbmp8_line()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sbmp8_line </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw a line on an 8-bit buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">x1</td><td>First X-coord. </td></tr>
    <tr><td class="paramname">y1</td><td>First Y-coord. </td></tr>
    <tr><td class="paramname">x2</td><td>Second X-coord. </td></tr>
    <tr><td class="paramname">y2</td><td>Second Y-coord. </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Does normalization, but not bounds checks. </dd></dl>

</div>
</div>
<a id="gaf11c57ccae4f6a4a8650022692201669"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf11c57ccae4f6a4a8650022692201669">&#9670;&nbsp;</a></span>sbmp8_plot()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sbmp8_plot </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Plot a single pixel on a 8-bit buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">x</td><td>X-coord. </td></tr>
    <tr><td class="paramname">y</td><td>Y-coord. </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Slow as fuck. Inline plotting functionality if possible. </dd></dl>

<p class="reference">Referenced by <a class="el" href="group__grpTTEBmp.htm#gafb51f9f2b05d91908b30e133def22a6a">bmp8_drawg()</a>.</p>

</div>
</div>
<a id="ga1d3859acc074497a2a5f68f33c91093d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1d3859acc074497a2a5f68f33c91093d">&#9670;&nbsp;</a></span>sbmp8_rect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sbmp8_rect </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>top</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>right</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>bottom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw a rectangle in 8-bit mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">left</td><td>Left side of rectangle; </td></tr>
    <tr><td class="paramname">top</td><td>Top side of rectangle. </td></tr>
    <tr><td class="paramname">right</td><td>Right side of rectangle. </td></tr>
    <tr><td class="paramname">bottom</td><td>Bottom side of rectangle. </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Does normalization, but not bounds checks. </dd></dl>

<p class="reference">Referenced by <a class="el" href="group__grpTTEMap.htm#gaf833fb07d45f79c5c65242799784ebc5">ase_erase()</a>, and <a class="el" href="group__grpTTEBmp.htm#ga83815eea2c42bc56746903dacb30395f">bmp8_erase()</a>.</p>

</div>
</div>
<a id="ga9fd7423775f60058ef567c822c760cd2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9fd7423775f60058ef567c822c760cd2">&#9670;&nbsp;</a></span>sbmp8_vline()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sbmp8_vline </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw a vertical line on an 8-bit buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">x</td><td>X-coord. </td></tr>
    <tr><td class="paramname">y1</td><td>First Y-coord. </td></tr>
    <tr><td class="paramname">y2</td><td>Second Y-coord. </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Does normalization, but not bounds checks. </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
