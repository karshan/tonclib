<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>libtonc: 16bpp bitmap surfaces</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">libtonc
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">16bpp bitmap surfaces<div class="ingroups"><a class="el" href="group__grpVideo.htm">Video</a> &raquo; <a class="el" href="group__grpSurface.htm">Surface functions</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gaa31208246ace11174dcb8e1e9725ebdd"><td class="memItemLeft" align="right" valign="top"><a id="gaa31208246ace11174dcb8e1e9725ebdd"></a>
u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#gaa31208246ace11174dcb8e1e9725ebdd">sbmp16_get_pixel</a> (const TSurface *src, int x, int y)</td></tr>
<tr class="memdesc:gaa31208246ace11174dcb8e1e9725ebdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pixel value of <em>src</em> at (<em>x</em>, <em>y</em>). <br /></td></tr>
<tr class="separator:gaa31208246ace11174dcb8e1e9725ebdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d5ac5aa75d7ec6f450f37e5a82ca9ad"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#ga1d5ac5aa75d7ec6f450f37e5a82ca9ad">sbmp16_plot</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:ga1d5ac5aa75d7ec6f450f37e5a82ca9ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plot a single pixel on a 16-bit buffer.  <a href="#ga1d5ac5aa75d7ec6f450f37e5a82ca9ad">More...</a><br /></td></tr>
<tr class="separator:ga1d5ac5aa75d7ec6f450f37e5a82ca9ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6615a3be2aa2f01dacb5363a85378481"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#ga6615a3be2aa2f01dacb5363a85378481">sbmp16_hline</a> (const TSurface *dst, int x1, int y, int x2, u32 clr)</td></tr>
<tr class="memdesc:ga6615a3be2aa2f01dacb5363a85378481"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a horizontal line on an 16bit buffer.  <a href="#ga6615a3be2aa2f01dacb5363a85378481">More...</a><br /></td></tr>
<tr class="separator:ga6615a3be2aa2f01dacb5363a85378481"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac9c6757dea30bbef2a4c7a34a40c05a3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#gac9c6757dea30bbef2a4c7a34a40c05a3">sbmp16_vline</a> (const TSurface *dst, int x, int y1, int y2, u32 clr)</td></tr>
<tr class="memdesc:gac9c6757dea30bbef2a4c7a34a40c05a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a vertical line on an 16bit buffer.  <a href="#gac9c6757dea30bbef2a4c7a34a40c05a3">More...</a><br /></td></tr>
<tr class="separator:gac9c6757dea30bbef2a4c7a34a40c05a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac042144a2ac5450da721f6f6471b4bd2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#gac042144a2ac5450da721f6f6471b4bd2">sbmp16_line</a> (const TSurface *dst, int x1, int y1, int x2, int y2, u32 clr)</td></tr>
<tr class="memdesc:gac042144a2ac5450da721f6f6471b4bd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a line on an 16bit buffer.  <a href="#gac042144a2ac5450da721f6f6471b4bd2">More...</a><br /></td></tr>
<tr class="separator:gac042144a2ac5450da721f6f6471b4bd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga45b7f47d1285456204ad312bb927edeb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#ga45b7f47d1285456204ad312bb927edeb">sbmp16_rect</a> (const TSurface *dst, int left, int top, int right, int bottom, u32 clr)</td></tr>
<tr class="memdesc:ga45b7f47d1285456204ad312bb927edeb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a rectangle in 16bit mode.  <a href="#ga45b7f47d1285456204ad312bb927edeb">More...</a><br /></td></tr>
<tr class="separator:ga45b7f47d1285456204ad312bb927edeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga56c912cf1361310ea1ad5b8a0a7c1e1e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#ga56c912cf1361310ea1ad5b8a0a7c1e1e">sbmp16_frame</a> (const TSurface *dst, int left, int top, int right, int bottom, u32 clr)</td></tr>
<tr class="memdesc:ga56c912cf1361310ea1ad5b8a0a7c1e1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a rectangle in 16bit mode.  <a href="#ga56c912cf1361310ea1ad5b8a0a7c1e1e">More...</a><br /></td></tr>
<tr class="separator:ga56c912cf1361310ea1ad5b8a0a7c1e1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad4675df5bcfffe0c8f173864a7cb2079"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#gad4675df5bcfffe0c8f173864a7cb2079">sbmp16_blit</a> (const TSurface *dst, int dstX, int dstY, uint width, uint height, const TSurface *src, int srcX, int srcY)</td></tr>
<tr class="memdesc:gad4675df5bcfffe0c8f173864a7cb2079"><td class="mdescLeft">&#160;</td><td class="mdescRight">16bpp blitter. Copies a rectangle from one surface to another.  <a href="#gad4675df5bcfffe0c8f173864a7cb2079">More...</a><br /></td></tr>
<tr class="separator:gad4675df5bcfffe0c8f173864a7cb2079"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacf5097d75a0166f9ead03eebb5475c03"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#gacf5097d75a0166f9ead03eebb5475c03">sbmp16_floodfill</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:gacf5097d75a0166f9ead03eebb5475c03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floodfill an area of the same color with new color <em>clr</em>.  <a href="#gacf5097d75a0166f9ead03eebb5475c03">More...</a><br /></td></tr>
<tr class="separator:gacf5097d75a0166f9ead03eebb5475c03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4f7267288657e9ba6a2add9aabb0136f"><td class="memItemLeft" align="right" valign="top"><a id="ga4f7267288657e9ba6a2add9aabb0136f"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#ga4f7267288657e9ba6a2add9aabb0136f">_sbmp16_plot</a> (const TSurface *dst, int x, int y, u32 clr)</td></tr>
<tr class="memdesc:ga4f7267288657e9ba6a2add9aabb0136f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plot a single pixel on a 16-bit buffer; inline version. <br /></td></tr>
<tr class="separator:ga4f7267288657e9ba6a2add9aabb0136f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafe13538316fde16e827d7e74fea92bbc"><td class="memItemLeft" align="right" valign="top"><a id="gafe13538316fde16e827d7e74fea92bbc"></a>
<a class="el" href="group__grpTypeAttr.htm#ga2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a> u32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__grpSbmp16.htm#gafe13538316fde16e827d7e74fea92bbc">_sbmp16_get_pixel</a> (const TSurface *src, int x, int y)</td></tr>
<tr class="memdesc:gafe13538316fde16e827d7e74fea92bbc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pixel value of <em>src</em> at (<em>x</em>, <em>y</em>); inline version. <br /></td></tr>
<tr class="separator:gafe13538316fde16e827d7e74fea92bbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Routines for 16bpp linear surfaces. For use in modes 3 and 5. Can also be used for regular tilemaps to a point. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="gad4675df5bcfffe0c8f173864a7cb2079"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad4675df5bcfffe0c8f173864a7cb2079">&#9670;&nbsp;</a></span>sbmp16_blit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sbmp16_blit </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dstX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dstY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>srcX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>srcY</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>16bpp blitter. Copies a rectangle from one surface to another. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">dstX</td><td>Left coord of rectangle on <em>dst</em>. </td></tr>
    <tr><td class="paramname">dstY</td><td>Top coord of rectangle on <em>dst</em>. </td></tr>
    <tr><td class="paramname">width</td><td>Width of rectangle to blit. </td></tr>
    <tr><td class="paramname">height</td><td>Height of rectangle to blit. </td></tr>
    <tr><td class="paramname">src</td><td>Source surface. </td></tr>
    <tr><td class="paramname">srcX</td><td>Left coord of rectangle on <em>src</em>. </td></tr>
    <tr><td class="paramname">srcY</td><td>Top coord of rectangle on <em>src</em>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>The rectangle will be clipped to both <em>src</em> and <em>dst</em>. </dd></dl>

</div>
</div>
<a id="gacf5097d75a0166f9ead03eebb5475c03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacf5097d75a0166f9ead03eebb5475c03">&#9670;&nbsp;</a></span>sbmp16_floodfill()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sbmp16_floodfill </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floodfill an area of the same color with new color <em>clr</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">x</td><td>X-coordinate. </td></tr>
    <tr><td class="paramname">y</td><td>Y-coordinate; </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga56c912cf1361310ea1ad5b8a0a7c1e1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga56c912cf1361310ea1ad5b8a0a7c1e1e">&#9670;&nbsp;</a></span>sbmp16_frame()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sbmp16_frame </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>top</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>right</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>bottom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw a rectangle in 16bit mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">left</td><td>Left side of rectangle; </td></tr>
    <tr><td class="paramname">top</td><td>Top side of rectangle. </td></tr>
    <tr><td class="paramname">right</td><td>Right side of rectangle. </td></tr>
    <tr><td class="paramname">bottom</td><td>Bottom side of rectangle. </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Does normalization, but not bounds checks. </dd>
<dd>
PONDER: RB in- or exclusive? </dd></dl>

</div>
</div>
<a id="ga6615a3be2aa2f01dacb5363a85378481"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6615a3be2aa2f01dacb5363a85378481">&#9670;&nbsp;</a></span>sbmp16_hline()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sbmp16_hline </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw a horizontal line on an 16bit buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">x1</td><td>First X-coord. </td></tr>
    <tr><td class="paramname">y</td><td>Y-coord. </td></tr>
    <tr><td class="paramname">x2</td><td>Second X-coord. </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Does normalization, but not bounds checks. </dd></dl>

</div>
</div>
<a id="gac042144a2ac5450da721f6f6471b4bd2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac042144a2ac5450da721f6f6471b4bd2">&#9670;&nbsp;</a></span>sbmp16_line()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sbmp16_line </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw a line on an 16bit buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">x1</td><td>First X-coord. </td></tr>
    <tr><td class="paramname">y1</td><td>First Y-coord. </td></tr>
    <tr><td class="paramname">x2</td><td>Second X-coord. </td></tr>
    <tr><td class="paramname">y2</td><td>Second Y-coord. </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Does normalization, but not bounds checks. </dd></dl>

</div>
</div>
<a id="ga1d5ac5aa75d7ec6f450f37e5a82ca9ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1d5ac5aa75d7ec6f450f37e5a82ca9ad">&#9670;&nbsp;</a></span>sbmp16_plot()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sbmp16_plot </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Plot a single pixel on a 16-bit buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">x</td><td>X-coord. </td></tr>
    <tr><td class="paramname">y</td><td>Y-coord. </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Slow as fuck. Inline plotting functionality if possible. </dd></dl>

</div>
</div>
<a id="ga45b7f47d1285456204ad312bb927edeb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga45b7f47d1285456204ad312bb927edeb">&#9670;&nbsp;</a></span>sbmp16_rect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sbmp16_rect </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>top</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>right</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>bottom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw a rectangle in 16bit mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">left</td><td>Left side of rectangle; </td></tr>
    <tr><td class="paramname">top</td><td>Top side of rectangle. </td></tr>
    <tr><td class="paramname">right</td><td>Right side of rectangle. </td></tr>
    <tr><td class="paramname">bottom</td><td>Bottom side of rectangle. </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Does normalization, but not bounds checks. </dd></dl>

<p class="reference">Referenced by <a class="el" href="group__grpTTEBmp.htm#ga3cdad07bb0b7336a5ac74fb6e1463f27">bmp16_erase()</a>, and <a class="el" href="group__grpTTEMap.htm#ga7fd57ca8f05e47681c7dfdff81ce45bf">se_erase()</a>.</p>

</div>
</div>
<a id="gac9c6757dea30bbef2a4c7a34a40c05a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac9c6757dea30bbef2a4c7a34a40c05a3">&#9670;&nbsp;</a></span>sbmp16_vline()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sbmp16_vline </td>
          <td>(</td>
          <td class="paramtype">const TSurface *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>clr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw a vertical line on an 16bit buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>Destination surface. </td></tr>
    <tr><td class="paramname">x</td><td>X-coord. </td></tr>
    <tr><td class="paramname">y1</td><td>First Y-coord. </td></tr>
    <tr><td class="paramname">y2</td><td>Second Y-coord. </td></tr>
    <tr><td class="paramname">clr</td><td>Color. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Does normalization, but not bounds checks. </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
